{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adwait\\\\uno\\\\modern-uno-game\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Toaster, toast } from 'react-hot-toast';\nimport { Users, Plus, LogIn, Moon, Sun, Target } from 'lucide-react';\nimport io from 'socket.io-client';\n\n// Global Styles (same as before...)\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GlobalStyle = createGlobalStyle`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\n    background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);\n    color: white;\n    overflow-x: hidden;\n  }\n`;\n\n// Styled Components (keeping the main ones, adding game-specific ones)\n_c = GlobalStyle;\nconst AppContainer = styled.div`\n  width: 100vw;\n  height: 100vh;\n  position: relative;\n  overflow: hidden;\n`;\n\n// Game Interface\n_c2 = AppContainer;\nconst GameInterface = styled(motion.div)`\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  position: relative;\n`;\n_c3 = GameInterface;\nconst GameHeader = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 20px;\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(20px);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n`;\n_c4 = GameHeader;\nconst PlayerCard = styled(motion.div)`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 15px 20px;\n  background: ${props => props.isCurrentPlayer ? 'linear-gradient(135deg, #ffd700, #ff6b6b)' : 'rgba(255, 255, 255, 0.15)'};\n  border-radius: 20px;\n  backdrop-filter: blur(15px);\n  border: ${props => props.isCurrentPlayer ? '3px solid #ffd700' : '1px solid rgba(255, 255, 255, 0.3)'};\n  \n  img {\n    width: 45px;\n    height: 45px;\n    border-radius: 50%;\n    border: 3px solid rgba(255, 255, 255, 0.5);\n  }\n  \n  .player-info {\n    .player-name {\n      font-weight: 700;\n      font-size: 1em;\n    }\n    .card-count {\n      font-size: 0.85em;\n      opacity: 0.9;\n    }\n  }\n`;\n_c5 = PlayerCard;\nconst GameBoard = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  padding: 30px;\n  position: relative;\n`;\n_c6 = GameBoard;\nconst CenterArea = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 60px;\n  margin-bottom: 40px;\n`;\n_c7 = CenterArea;\nconst Card = styled(motion.div)`\n  width: 120px;\n  height: 180px;\n  border-radius: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.8em;\n  font-weight: bold;\n  cursor: ${props => props.clickable ? 'pointer' : 'default'};\n  position: relative;\n  box-shadow: 0 12px 35px rgba(0, 0, 0, 0.4);\n  border: 4px solid rgba(255, 255, 255, 0.4);\n  \n  background: ${props => {\n  if (props.cardColor === 'red') return 'linear-gradient(135deg, #ff4757, #c44569)';\n  if (props.cardColor === 'blue') return 'linear-gradient(135deg, #3742fa, #2f3542)';\n  if (props.cardColor === 'green') return 'linear-gradient(135deg, #2ed573, #1e90ff)';\n  if (props.cardColor === 'yellow') return 'linear-gradient(135deg, #ffa502, #ff6348)';\n  if (props.cardColor === 'wild') return 'linear-gradient(135deg, #8e44ad, #e74c3c, #f39c12, #27ae60)';\n  return 'linear-gradient(135deg, #57606f, #2f3542)';\n}};\n  \n  color: white;\n  text-shadow: 3px 3px 6px rgba(0, 0, 0, 0.7);\n  \n  &:hover {\n    transform: ${props => props.clickable ? 'translateY(-15px) scale(1.1)' : 'translateY(-5px)'};\n    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.5);\n  }\n`;\n_c8 = Card;\nconst PlayerHand = styled.div`\n  position: fixed;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 12px;\n  padding: 25px;\n  background: rgba(255, 255, 255, 0.15);\n  backdrop-filter: blur(25px);\n  border-radius: 25px;\n  max-width: 95vw;\n  overflow-x: auto;\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3);\n`;\n_c9 = PlayerHand;\nconst GameStatus = styled.div`\n  text-align: center;\n  margin-top: 25px;\n  padding: 20px;\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(15px);\n  border-radius: 20px;\n  \n  .turn-indicator {\n    font-size: 1.4em;\n    font-weight: 700;\n    margin-bottom: 10px;\n    color: ${props => props.isMyTurn ? '#2ed573' : 'white'};\n  }\n  \n  .penalty-warning {\n    color: #ff4757;\n    font-weight: 600;\n    margin-top: 8px;\n  }\n`;\n_c0 = GameStatus;\nconst ActionButton = styled(motion.button)`\n  padding: 15px 30px;\n  border: none;\n  border-radius: 15px;\n  font-size: 1.1em;\n  font-weight: 700;\n  cursor: pointer;\n  backdrop-filter: blur(15px);\n  border: 2px solid rgba(255, 255, 255, 0.3);\n  transition: all 0.3s ease;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  background: linear-gradient(135deg, #2ed573, #1e90ff);\n  color: white;\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n  \n  &:hover:not(:disabled) {\n    transform: translateY(-3px) scale(1.05);\n  }\n`;\nconst ColorPicker = styled(motion.div)`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: rgba(255, 255, 255, 0.95);\n  backdrop-filter: blur(30px);\n  padding: 40px;\n  border-radius: 25px;\n  z-index: 1000;\n  text-align: center;\n  \n  h3 {\n    margin-bottom: 25px;\n    color: #333;\n    font-size: 1.5em;\n  }\n`;\n_c1 = ColorPicker;\nconst ColorOption = styled(motion.div)`\n  width: 90px;\n  height: 90px;\n  border-radius: 50%;\n  cursor: pointer;\n  margin: 15px;\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 1.3em;\n  color: white;\n  font-weight: bold;\n  border: 4px solid rgba(255, 255, 255, 0.8);\n  \n  &:hover {\n    transform: scale(1.15);\n    border-color: #ffd700;\n  }\n`;\n\n// Rest of the lobby components (same as before, keeping them short for space)\n_c10 = ColorOption;\nconst GameContainer = styled(motion.div)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  padding: 20px;\n`;\n_c11 = GameContainer;\nconst GameCard = styled(motion.div)`\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(20px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n  border-radius: 24px;\n  padding: 50px;\n  max-width: 600px;\n  width: 100%;\n  text-align: center;\n`;\n_c12 = GameCard;\nconst Title = styled.h1`\n  font-size: 4em;\n  font-weight: 700;\n  margin-bottom: 10px;\n  background: linear-gradient(135deg, #ff4757, #ffd700);\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n  background-clip: text;\n`;\n_c13 = Title;\nconst Subtitle = styled.p`\n  font-size: 1.3em;\n  opacity: 0.8;\n  margin-bottom: 40px;\n  font-weight: 300;\n`;\n_c14 = Subtitle;\nconst Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  margin-bottom: 30px;\n`;\n_c15 = Form;\nconst Input = styled.input`\n  padding: 18px 24px;\n  border: 2px solid rgba(255, 255, 255, 0.2);\n  border-radius: 16px;\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  font-size: 1.2em;\n  \n  &::placeholder {\n    color: rgba(255, 255, 255, 0.6);\n  }\n  \n  &:focus {\n    outline: none;\n    border-color: #ff4757;\n    background: rgba(255, 255, 255, 0.15);\n  }\n`;\n_c16 = Input;\nconst ButtonGroup = styled.div`\n  display: flex;\n  gap: 15px;\n  margin-bottom: 30px;\n`;\n_c17 = ButtonGroup;\nconst Button = styled(motion.button)`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 12px;\n  padding: 18px 32px;\n  border: none;\n  border-radius: 16px;\n  font-size: 1.2em;\n  font-weight: 600;\n  cursor: pointer;\n  \n  &.primary {\n    background: linear-gradient(135deg, #ff4757, #ff3742);\n    color: white;\n  }\n  \n  &.secondary {\n    background: linear-gradient(135deg, #5352ed, #3742fa);\n    color: white;\n  }\n  \n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n_c18 = Button;\nconst ThemeToggle = styled(motion.button)`\n  position: absolute;\n  top: 30px;\n  right: 30px;\n  width: 60px;\n  height: 60px;\n  border: none;\n  border-radius: 50%;\n  background: rgba(255, 255, 255, 0.1);\n  color: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n`;\n_c19 = ThemeToggle;\nconst ConnectionStatus = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  font-size: 1.2em;\n  margin-bottom: 30px;\n  \n  .status-dot {\n    width: 16px;\n    height: 16px;\n    border-radius: 50%;\n    background: ${props => props.connected ? '#2ed573' : '#ff4757'};\n  }\n`;\n_c20 = ConnectionStatus;\nconst RoomInfo = styled.div`\n  background: rgba(255, 255, 255, 0.1);\n  border-radius: 20px;\n  padding: 40px;\n  margin-top: 30px;\n`;\n_c21 = RoomInfo;\nconst PlayerList = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 15px;\n  justify-content: center;\n  margin-top: 25px;\n`;\n_c22 = PlayerList;\nconst PlayerChip = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  padding: 15px 20px;\n  background: ${props => props.isMe ? 'linear-gradient(135deg, #ff4757, #ff3742)' : 'rgba(255, 255, 255, 0.15)'};\n  border-radius: 30px;\n  font-size: 1em;\n  font-weight: 500;\n  \n  img {\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n  }\n`;\n_c23 = PlayerChip;\nfunction App() {\n  _s();\n  var _room$players, _room$players2, _room$players3;\n  const [gameState, setGameState] = useState('lobby');\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [player, setPlayer] = useState(null);\n  const [room, setRoom] = useState(null);\n  const [playerName, setPlayerName] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [mode, setMode] = useState('create');\n\n  // Game state\n  const [gameData, setGameData] = useState(null);\n  const [myCards, setMyCards] = useState([]);\n  const [isMyTurn, setIsMyTurn] = useState(false);\n  const [showColorPicker, setShowColorPicker] = useState(false);\n  const [pendingWildCard, setPendingWildCard] = useState(null);\n\n  // Socket connection\n  useEffect(() => {\n    const SERVER_URL = 'http://localhost:3002';\n    const socketInstance = io(SERVER_URL);\n    socketInstance.on('connect', () => {\n      setConnected(true);\n      toast.success('🎮 Connected to UNO server!');\n    });\n    socketInstance.on('disconnect', () => {\n      setConnected(false);\n      toast.error('❌ Disconnected');\n    });\n    socketInstance.on('roomCreated', data => {\n      setRoom(data.room);\n      setPlayer(data.room.players[0]);\n      setGameState('waiting');\n      toast.success(`🏠 Room ${data.roomId} created!`);\n    });\n    socketInstance.on('roomJoined', data => {\n      setRoom(data.room);\n      setPlayer(data.player);\n      setGameState('waiting');\n      toast.success('🚪 Joined room!');\n    });\n    socketInstance.on('playerJoined', data => {\n      setRoom(prevRoom => ({\n        ...prevRoom,\n        players: [...((prevRoom === null || prevRoom === void 0 ? void 0 : prevRoom.players) || []), data.player]\n      }));\n      toast.success(`${data.player.name} joined!`);\n    });\n    socketInstance.on('gameStarted', data => {\n      setGameState('playing');\n      toast.success('🎮 Cards dealt! Game started!');\n    });\n    socketInstance.on('gameUpdate', data => {\n      setGameData(data);\n      setMyCards(data.myCards || []);\n      setIsMyTurn(data.isMyTurn || false);\n    });\n    socketInstance.on('gameError', error => {\n      toast.error(error.message);\n    });\n    socketInstance.on('unoAlert', data => {\n      toast.success(data.message);\n    });\n    socketInstance.on('gameWon', data => {\n      toast.success(data.message);\n      setTimeout(() => {\n        setGameState('lobby');\n        setRoom(null);\n        setPlayer(null);\n        setGameData(null);\n      }, 5000);\n    });\n    socketInstance.on('error', error => {\n      toast.error(error.message);\n    });\n    setSocket(socketInstance);\n    return () => socketInstance.close();\n  }, []);\n  const createRoom = useCallback(() => {\n    if (socket && playerName.trim()) {\n      socket.emit('createRoom', {\n        playerName: playerName.trim()\n      });\n    }\n  }, [socket, playerName]);\n  const joinRoom = useCallback(() => {\n    if (socket && playerName.trim() && roomId.trim()) {\n      socket.emit('joinRoom', {\n        roomId: roomId.trim().toUpperCase(),\n        playerName: playerName.trim()\n      });\n    }\n  }, [socket, playerName, roomId]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (mode === 'create') {\n      createRoom();\n    } else {\n      joinRoom();\n    }\n  };\n  const playCard = useCallback((cardId, chosenColor = null) => {\n    if (socket) {\n      socket.emit('playCard', {\n        cardId,\n        chosenColor\n      });\n    }\n  }, [socket]);\n  const drawCard = useCallback(() => {\n    if (socket) {\n      socket.emit('drawCard');\n    }\n  }, [socket]);\n  const handleCardClick = card => {\n    if (!isMyTurn) {\n      toast.error('Not your turn!');\n      return;\n    }\n    if (card.color === 'wild') {\n      setPendingWildCard(card);\n      setShowColorPicker(true);\n    } else {\n      playCard(card.id);\n    }\n  };\n  const handleColorChoice = color => {\n    if (pendingWildCard) {\n      playCard(pendingWildCard.id, color);\n      setPendingWildCard(null);\n      setShowColorPicker(false);\n    }\n  };\n  const renderGameInterface = () => {\n    var _gameData$players, _gameData$topCard, _gameData$topCard2, _gameData$topCard3, _gameData$topCard3$va, _gameData$currentColo;\n    return /*#__PURE__*/_jsxDEV(GameInterface, {\n      children: [/*#__PURE__*/_jsxDEV(GameHeader, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '20px'\n          },\n          children: gameData === null || gameData === void 0 ? void 0 : (_gameData$players = gameData.players) === null || _gameData$players === void 0 ? void 0 : _gameData$players.map((playerData, index) => /*#__PURE__*/_jsxDEV(PlayerCard, {\n            isCurrentPlayer: index === gameData.currentPlayer,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: playerData.avatar,\n              alt: playerData.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"player-info\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"player-name\",\n                children: playerData.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"card-count\",\n                children: [playerData.cardCount, \" cards\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 15\n            }, this)]\n          }, playerData.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 554,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(GameBoard, {\n        children: [/*#__PURE__*/_jsxDEV(CenterArea, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              cardColor: \"deck\",\n              clickable: isMyTurn,\n              onClick: drawCard,\n              whileHover: {\n                scale: isMyTurn ? 1.05 : 1\n              },\n              children: \"\\uD83C\\uDCCF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 576,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '10px',\n                fontSize: '1.1em'\n              },\n              children: [\"Draw (\", (gameData === null || gameData === void 0 ? void 0 : gameData.deckSize) || 0, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 584,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              cardColor: (gameData === null || gameData === void 0 ? void 0 : gameData.currentColor) || (gameData === null || gameData === void 0 ? void 0 : (_gameData$topCard = gameData.topCard) === null || _gameData$topCard === void 0 ? void 0 : _gameData$topCard.color),\n              value: gameData === null || gameData === void 0 ? void 0 : (_gameData$topCard2 = gameData.topCard) === null || _gameData$topCard2 === void 0 ? void 0 : _gameData$topCard2.value,\n              children: (gameData === null || gameData === void 0 ? void 0 : (_gameData$topCard3 = gameData.topCard) === null || _gameData$topCard3 === void 0 ? void 0 : (_gameData$topCard3$va = _gameData$topCard3.value) === null || _gameData$topCard3$va === void 0 ? void 0 : _gameData$topCard3$va.toUpperCase()) || '?'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 591,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginTop: '10px',\n                fontSize: '1.1em'\n              },\n              children: [\"Color: \", (gameData === null || gameData === void 0 ? void 0 : (_gameData$currentColo = gameData.currentColor) === null || _gameData$currentColo === void 0 ? void 0 : _gameData$currentColo.toUpperCase()) || 'Unknown']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 597,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 590,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(GameStatus, {\n          isMyTurn: isMyTurn,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"turn-indicator\",\n            children: isMyTurn ? '🎯 Your Turn!' : `Waiting for ${gameData === null || gameData === void 0 ? void 0 : gameData.currentPlayerName}...`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 11\n          }, this), (gameData === null || gameData === void 0 ? void 0 : gameData.drawCount) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"penalty-warning\",\n            children: [\"\\u26A1 Draw \", gameData.drawCount, \" cards penalty!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 603,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(PlayerHand, {\n        children: myCards.map(card => /*#__PURE__*/_jsxDEV(Card, {\n          cardColor: card.color,\n          value: card.value,\n          clickable: isMyTurn,\n          onClick: () => handleCardClick(card),\n          whileHover: {\n            y: isMyTurn ? -20 : -5,\n            scale: isMyTurn ? 1.15 : 1.05\n          },\n          style: {\n            minWidth: '100px'\n          },\n          children: card.value.toUpperCase()\n        }, card.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: showColorPicker && /*#__PURE__*/_jsxDEV(ColorPicker, {\n          initial: {\n            opacity: 0,\n            scale: 0.8\n          },\n          animate: {\n            opacity: 1,\n            scale: 1\n          },\n          exit: {\n            opacity: 0,\n            scale: 0.8\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Choose a Color:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 644,\n            columnNumber: 13\n          }, this), ['red', 'blue', 'green', 'yellow'].map(color => /*#__PURE__*/_jsxDEV(ColorOption, {\n            style: {\n              background: color === 'red' ? '#ff4757' : color === 'blue' ? '#3742fa' : color === 'green' ? '#2ed573' : '#ffa502'\n            },\n            onClick: () => handleColorChoice(color),\n            whileHover: {\n              scale: 1.15\n            },\n            whileTap: {\n              scale: 0.9\n            },\n            children: color.toUpperCase()\n          }, color, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 5\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: {},\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AppContainer, {\n      children: [/*#__PURE__*/_jsxDEV(ThemeToggle, {\n        children: /*#__PURE__*/_jsxDEV(Sun, {\n          size: 24\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 671,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        mode: \"wait\",\n        children: [gameState === 'lobby' && /*#__PURE__*/_jsxDEV(GameContainer, {\n          children: /*#__PURE__*/_jsxDEV(GameCard, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: \"\\uD83C\\uDCCF UNO\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 678,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n              children: \"Real-time Multiplayer Card Game\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 679,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ConnectionStatus, {\n              connected: connected,\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"status-dot\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 19\n              }, this), connected ? 'Connected to server' : 'Connecting...']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 681,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                placeholder: \"Enter your name...\",\n                value: playerName,\n                onChange: e => setPlayerName(e.target.value),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 687,\n                columnNumber: 19\n              }, this), mode === 'join' && /*#__PURE__*/_jsxDEV(Input, {\n                type: \"text\",\n                placeholder: \"Room ID...\",\n                value: roomId,\n                onChange: e => setRoomId(e.target.value.toUpperCase()),\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 696,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 686,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                className: \"primary\",\n                onClick: () => {\n                  setMode('create');\n                  if (playerName.trim()) createRoom();\n                },\n                disabled: !playerName.trim() || !connected,\n                children: [/*#__PURE__*/_jsxDEV(Plus, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 715,\n                  columnNumber: 21\n                }, this), \"Create Room\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 707,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"secondary\",\n                onClick: () => {\n                  if (mode === 'join') {\n                    if (playerName.trim() && roomId.trim()) joinRoom();\n                  } else {\n                    setMode('join');\n                  }\n                },\n                disabled: mode === 'join' && (!playerName.trim() || !roomId.trim()) || !connected,\n                children: [/*#__PURE__*/_jsxDEV(LogIn, {\n                  size: 20\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 730,\n                  columnNumber: 21\n                }, this), mode === 'join' ? 'Join Room' : 'Join Existing']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 719,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 706,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 677,\n            columnNumber: 15\n          }, this)\n        }, \"lobby\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 13\n        }, this), gameState === 'waiting' && room && /*#__PURE__*/_jsxDEV(GameContainer, {\n          children: /*#__PURE__*/_jsxDEV(GameCard, {\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              children: [\"\\uD83C\\uDFE0 Room: \", room.id]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Subtitle, {\n              children: \"Share this room ID with your friends!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(RoomInfo, {\n              children: [/*#__PURE__*/_jsxDEV(PlayerList, {\n                children: (_room$players = room.players) === null || _room$players === void 0 ? void 0 : _room$players.map(roomPlayer => /*#__PURE__*/_jsxDEV(PlayerChip, {\n                  isMe: roomPlayer.id === (player === null || player === void 0 ? void 0 : player.id),\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: roomPlayer.avatar,\n                    alt: roomPlayer.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 751,\n                    columnNumber: 25\n                  }, this), roomPlayer.name, roomPlayer.id === (player === null || player === void 0 ? void 0 : player.id) && ' (You)']\n                }, roomPlayer.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 747,\n                  columnNumber: 23\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 745,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  marginTop: '30px',\n                  opacity: 0.8,\n                  fontSize: '1.1em',\n                  textAlign: 'center'\n                },\n                children: ((_room$players2 = room.players) === null || _room$players2 === void 0 ? void 0 : _room$players2.length) < 2 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Users, {\n                    size: 20,\n                    style: {\n                      marginRight: '10px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 766,\n                    columnNumber: 25\n                  }, this), \"Waiting for more players... (\", (_room$players3 = room.players) === null || _room$players3 === void 0 ? void 0 : _room$players3.length, \"/4)\"]\n                }, void 0, true) : '⚡ Game starting soon with real UNO cards!'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 740,\n            columnNumber: 15\n          }, this)\n        }, \"waiting\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 13\n        }, this), gameState === 'playing' && gameData && renderGameInterface()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 674,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Toaster, {\n        position: \"top-center\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 667,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6xHzfOL10zjoz1PzoGru5cb/xEc=\");\n_c24 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c0, _c1, _c10, _c11, _c12, _c13, _c14, _c15, _c16, _c17, _c18, _c19, _c20, _c21, _c22, _c23, _c24;\n$RefreshReg$(_c, \"GlobalStyle\");\n$RefreshReg$(_c2, \"AppContainer\");\n$RefreshReg$(_c3, \"GameInterface\");\n$RefreshReg$(_c4, \"GameHeader\");\n$RefreshReg$(_c5, \"PlayerCard\");\n$RefreshReg$(_c6, \"GameBoard\");\n$RefreshReg$(_c7, \"CenterArea\");\n$RefreshReg$(_c8, \"Card\");\n$RefreshReg$(_c9, \"PlayerHand\");\n$RefreshReg$(_c0, \"GameStatus\");\n$RefreshReg$(_c1, \"ColorPicker\");\n$RefreshReg$(_c10, \"ColorOption\");\n$RefreshReg$(_c11, \"GameContainer\");\n$RefreshReg$(_c12, \"GameCard\");\n$RefreshReg$(_c13, \"Title\");\n$RefreshReg$(_c14, \"Subtitle\");\n$RefreshReg$(_c15, \"Form\");\n$RefreshReg$(_c16, \"Input\");\n$RefreshReg$(_c17, \"ButtonGroup\");\n$RefreshReg$(_c18, \"Button\");\n$RefreshReg$(_c19, \"ThemeToggle\");\n$RefreshReg$(_c20, \"ConnectionStatus\");\n$RefreshReg$(_c21, \"RoomInfo\");\n$RefreshReg$(_c22, \"PlayerList\");\n$RefreshReg$(_c23, \"PlayerChip\");\n$RefreshReg$(_c24, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","styled","ThemeProvider","createGlobalStyle","motion","AnimatePresence","Toaster","toast","Users","Plus","LogIn","Moon","Sun","Target","io","jsxDEV","_jsxDEV","Fragment","_Fragment","GlobalStyle","_c","AppContainer","div","_c2","GameInterface","_c3","GameHeader","_c4","PlayerCard","props","isCurrentPlayer","_c5","GameBoard","_c6","CenterArea","_c7","Card","clickable","cardColor","_c8","PlayerHand","_c9","GameStatus","isMyTurn","_c0","ActionButton","button","ColorPicker","_c1","ColorOption","_c10","GameContainer","_c11","GameCard","_c12","Title","h1","_c13","Subtitle","p","_c14","Form","form","_c15","Input","input","_c16","ButtonGroup","_c17","Button","_c18","ThemeToggle","_c19","ConnectionStatus","connected","_c20","RoomInfo","_c21","PlayerList","_c22","PlayerChip","isMe","_c23","App","_s","_room$players","_room$players2","_room$players3","gameState","setGameState","socket","setSocket","setConnected","player","setPlayer","room","setRoom","playerName","setPlayerName","roomId","setRoomId","mode","setMode","gameData","setGameData","myCards","setMyCards","setIsMyTurn","showColorPicker","setShowColorPicker","pendingWildCard","setPendingWildCard","SERVER_URL","socketInstance","on","success","error","data","players","prevRoom","name","message","setTimeout","close","createRoom","trim","emit","joinRoom","toUpperCase","handleSubmit","e","preventDefault","playCard","cardId","chosenColor","drawCard","handleCardClick","card","color","id","handleColorChoice","renderGameInterface","_gameData$players","_gameData$topCard","_gameData$topCard2","_gameData$topCard3","_gameData$topCard3$va","_gameData$currentColo","children","style","display","gap","map","playerData","index","currentPlayer","src","avatar","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","cardCount","textAlign","onClick","whileHover","scale","marginTop","fontSize","deckSize","currentColor","topCard","value","currentPlayerName","drawCount","y","minWidth","initial","opacity","animate","exit","background","whileTap","theme","size","onSubmit","type","placeholder","onChange","target","required","disabled","roomPlayer","length","marginRight","position","_c24","$RefreshReg$"],"sources":["C:/Users/Adwait/uno/modern-uno-game/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport styled, { ThemeProvider, createGlobalStyle } from 'styled-components';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { Toaster, toast } from 'react-hot-toast';\r\nimport { Users, Plus, LogIn, Moon, Sun, Target } from 'lucide-react';\r\nimport io from 'socket.io-client';\r\n\r\n// Global Styles (same as before...)\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    margin: 0;\r\n    padding: 0;\r\n    box-sizing: border-box;\r\n  }\r\n  body {\r\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif;\r\n    background: linear-gradient(135deg, #1a1a2e 0%, #16213e 50%, #0f3460 100%);\r\n    color: white;\r\n    overflow-x: hidden;\r\n  }\r\n`;\r\n\r\n// Styled Components (keeping the main ones, adding game-specific ones)\r\nconst AppContainer = styled.div`\r\n  width: 100vw;\r\n  height: 100vh;\r\n  position: relative;\r\n  overflow: hidden;\r\n`;\r\n\r\n// Game Interface\r\nconst GameInterface = styled(motion.div)`\r\n  width: 100%;\r\n  height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  position: relative;\r\n`;\r\n\r\nconst GameHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  padding: 20px;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(20px);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.2);\r\n`;\r\n\r\nconst PlayerCard = styled(motion.div)`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  padding: 15px 20px;\r\n  background: ${props => props.isCurrentPlayer ? \r\n    'linear-gradient(135deg, #ffd700, #ff6b6b)' : \r\n    'rgba(255, 255, 255, 0.15)'\r\n  };\r\n  border-radius: 20px;\r\n  backdrop-filter: blur(15px);\r\n  border: ${props => props.isCurrentPlayer ? '3px solid #ffd700' : '1px solid rgba(255, 255, 255, 0.3)'};\r\n  \r\n  img {\r\n    width: 45px;\r\n    height: 45px;\r\n    border-radius: 50%;\r\n    border: 3px solid rgba(255, 255, 255, 0.5);\r\n  }\r\n  \r\n  .player-info {\r\n    .player-name {\r\n      font-weight: 700;\r\n      font-size: 1em;\r\n    }\r\n    .card-count {\r\n      font-size: 0.85em;\r\n      opacity: 0.9;\r\n    }\r\n  }\r\n`;\r\n\r\nconst GameBoard = styled.div`\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding: 30px;\r\n  position: relative;\r\n`;\r\n\r\nconst CenterArea = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 60px;\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst Card = styled(motion.div)`\r\n  width: 120px;\r\n  height: 180px;\r\n  border-radius: 20px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1.8em;\r\n  font-weight: bold;\r\n  cursor: ${props => props.clickable ? 'pointer' : 'default'};\r\n  position: relative;\r\n  box-shadow: 0 12px 35px rgba(0, 0, 0, 0.4);\r\n  border: 4px solid rgba(255, 255, 255, 0.4);\r\n  \r\n  background: ${props => {\r\n    if (props.cardColor === 'red') return 'linear-gradient(135deg, #ff4757, #c44569)';\r\n    if (props.cardColor === 'blue') return 'linear-gradient(135deg, #3742fa, #2f3542)';\r\n    if (props.cardColor === 'green') return 'linear-gradient(135deg, #2ed573, #1e90ff)';\r\n    if (props.cardColor === 'yellow') return 'linear-gradient(135deg, #ffa502, #ff6348)';\r\n    if (props.cardColor === 'wild') return 'linear-gradient(135deg, #8e44ad, #e74c3c, #f39c12, #27ae60)';\r\n    return 'linear-gradient(135deg, #57606f, #2f3542)';\r\n  }};\r\n  \r\n  color: white;\r\n  text-shadow: 3px 3px 6px rgba(0, 0, 0, 0.7);\r\n  \r\n  &:hover {\r\n    transform: ${props => props.clickable ? 'translateY(-15px) scale(1.1)' : 'translateY(-5px)'};\r\n    box-shadow: 0 20px 50px rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst PlayerHand = styled.div`\r\n  position: fixed;\r\n  bottom: 20px;\r\n  left: 50%;\r\n  transform: translateX(-50%);\r\n  display: flex;\r\n  gap: 12px;\r\n  padding: 25px;\r\n  background: rgba(255, 255, 255, 0.15);\r\n  backdrop-filter: blur(25px);\r\n  border-radius: 25px;\r\n  max-width: 95vw;\r\n  overflow-x: auto;\r\n  box-shadow: 0 10px 40px rgba(0, 0, 0, 0.3);\r\n`;\r\n\r\nconst GameStatus = styled.div`\r\n  text-align: center;\r\n  margin-top: 25px;\r\n  padding: 20px;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(15px);\r\n  border-radius: 20px;\r\n  \r\n  .turn-indicator {\r\n    font-size: 1.4em;\r\n    font-weight: 700;\r\n    margin-bottom: 10px;\r\n    color: ${props => props.isMyTurn ? '#2ed573' : 'white'};\r\n  }\r\n  \r\n  .penalty-warning {\r\n    color: #ff4757;\r\n    font-weight: 600;\r\n    margin-top: 8px;\r\n  }\r\n`;\r\n\r\nconst ActionButton = styled(motion.button)`\r\n  padding: 15px 30px;\r\n  border: none;\r\n  border-radius: 15px;\r\n  font-size: 1.1em;\r\n  font-weight: 700;\r\n  cursor: pointer;\r\n  backdrop-filter: blur(15px);\r\n  border: 2px solid rgba(255, 255, 255, 0.3);\r\n  transition: all 0.3s ease;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  background: linear-gradient(135deg, #2ed573, #1e90ff);\r\n  color: white;\r\n  \r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n  }\r\n  \r\n  &:hover:not(:disabled) {\r\n    transform: translateY(-3px) scale(1.05);\r\n  }\r\n`;\r\n\r\nconst ColorPicker = styled(motion.div)`\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  background: rgba(255, 255, 255, 0.95);\r\n  backdrop-filter: blur(30px);\r\n  padding: 40px;\r\n  border-radius: 25px;\r\n  z-index: 1000;\r\n  text-align: center;\r\n  \r\n  h3 {\r\n    margin-bottom: 25px;\r\n    color: #333;\r\n    font-size: 1.5em;\r\n  }\r\n`;\r\n\r\nconst ColorOption = styled(motion.div)`\r\n  width: 90px;\r\n  height: 90px;\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  margin: 15px;\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 1.3em;\r\n  color: white;\r\n  font-weight: bold;\r\n  border: 4px solid rgba(255, 255, 255, 0.8);\r\n  \r\n  &:hover {\r\n    transform: scale(1.15);\r\n    border-color: #ffd700;\r\n  }\r\n`;\r\n\r\n// Rest of the lobby components (same as before, keeping them short for space)\r\nconst GameContainer = styled(motion.div)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100%;\r\n  height: 100%;\r\n  padding: 20px;\r\n`;\r\n\r\nconst GameCard = styled(motion.div)`\r\n  background: rgba(255, 255, 255, 0.1);\r\n  backdrop-filter: blur(20px);\r\n  border: 1px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 24px;\r\n  padding: 50px;\r\n  max-width: 600px;\r\n  width: 100%;\r\n  text-align: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 4em;\r\n  font-weight: 700;\r\n  margin-bottom: 10px;\r\n  background: linear-gradient(135deg, #ff4757, #ffd700);\r\n  -webkit-background-clip: text;\r\n  -webkit-text-fill-color: transparent;\r\n  background-clip: text;\r\n`;\r\n\r\nconst Subtitle = styled.p`\r\n  font-size: 1.3em;\r\n  opacity: 0.8;\r\n  margin-bottom: 40px;\r\n  font-weight: 300;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  display: flex;\r\n  flex-direction: column;\r\n  gap: 20px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  padding: 18px 24px;\r\n  border: 2px solid rgba(255, 255, 255, 0.2);\r\n  border-radius: 16px;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  color: white;\r\n  font-size: 1.2em;\r\n  \r\n  &::placeholder {\r\n    color: rgba(255, 255, 255, 0.6);\r\n  }\r\n  \r\n  &:focus {\r\n    outline: none;\r\n    border-color: #ff4757;\r\n    background: rgba(255, 255, 255, 0.15);\r\n  }\r\n`;\r\n\r\nconst ButtonGroup = styled.div`\r\n  display: flex;\r\n  gap: 15px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst Button = styled(motion.button)`\r\n  flex: 1;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 12px;\r\n  padding: 18px 32px;\r\n  border: none;\r\n  border-radius: 16px;\r\n  font-size: 1.2em;\r\n  font-weight: 600;\r\n  cursor: pointer;\r\n  \r\n  &.primary {\r\n    background: linear-gradient(135deg, #ff4757, #ff3742);\r\n    color: white;\r\n  }\r\n  \r\n  &.secondary {\r\n    background: linear-gradient(135deg, #5352ed, #3742fa);\r\n    color: white;\r\n  }\r\n  \r\n  &:disabled {\r\n    opacity: 0.5;\r\n    cursor: not-allowed;\r\n  }\r\n`;\r\n\r\nconst ThemeToggle = styled(motion.button)`\r\n  position: absolute;\r\n  top: 30px;\r\n  right: 30px;\r\n  width: 60px;\r\n  height: 60px;\r\n  border: none;\r\n  border-radius: 50%;\r\n  background: rgba(255, 255, 255, 0.1);\r\n  color: white;\r\n  cursor: pointer;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n`;\r\n\r\nconst ConnectionStatus = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  font-size: 1.2em;\r\n  margin-bottom: 30px;\r\n  \r\n  .status-dot {\r\n    width: 16px;\r\n    height: 16px;\r\n    border-radius: 50%;\r\n    background: ${props => props.connected ? '#2ed573' : '#ff4757'};\r\n  }\r\n`;\r\n\r\nconst RoomInfo = styled.div`\r\n  background: rgba(255, 255, 255, 0.1);\r\n  border-radius: 20px;\r\n  padding: 40px;\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst PlayerList = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 15px;\r\n  justify-content: center;\r\n  margin-top: 25px;\r\n`;\r\n\r\nconst PlayerChip = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 12px;\r\n  padding: 15px 20px;\r\n  background: ${props => props.isMe ? \r\n    'linear-gradient(135deg, #ff4757, #ff3742)' : \r\n    'rgba(255, 255, 255, 0.15)'\r\n  };\r\n  border-radius: 30px;\r\n  font-size: 1em;\r\n  font-weight: 500;\r\n  \r\n  img {\r\n    width: 32px;\r\n    height: 32px;\r\n    border-radius: 50%;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const [gameState, setGameState] = useState('lobby');\r\n  const [socket, setSocket] = useState(null);\r\n  const [connected, setConnected] = useState(false);\r\n  const [player, setPlayer] = useState(null);\r\n  const [room, setRoom] = useState(null);\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [roomId, setRoomId] = useState('');\r\n  const [mode, setMode] = useState('create');\r\n  \r\n  // Game state\r\n  const [gameData, setGameData] = useState(null);\r\n  const [myCards, setMyCards] = useState([]);\r\n  const [isMyTurn, setIsMyTurn] = useState(false);\r\n  const [showColorPicker, setShowColorPicker] = useState(false);\r\n  const [pendingWildCard, setPendingWildCard] = useState(null);\r\n\r\n  // Socket connection\r\n  useEffect(() => {\r\n    const SERVER_URL = 'http://localhost:3002';\r\n    const socketInstance = io(SERVER_URL);\r\n\r\n    socketInstance.on('connect', () => {\r\n      setConnected(true);\r\n      toast.success('🎮 Connected to UNO server!');\r\n    });\r\n\r\n    socketInstance.on('disconnect', () => {\r\n      setConnected(false);\r\n      toast.error('❌ Disconnected');\r\n    });\r\n\r\n    socketInstance.on('roomCreated', (data) => {\r\n      setRoom(data.room);\r\n      setPlayer(data.room.players[0]);\r\n      setGameState('waiting');\r\n      toast.success(`🏠 Room ${data.roomId} created!`);\r\n    });\r\n\r\n    socketInstance.on('roomJoined', (data) => {\r\n      setRoom(data.room);\r\n      setPlayer(data.player);\r\n      setGameState('waiting');\r\n      toast.success('🚪 Joined room!');\r\n    });\r\n\r\n    socketInstance.on('playerJoined', (data) => {\r\n      setRoom(prevRoom => ({\r\n        ...prevRoom,\r\n        players: [...(prevRoom?.players || []), data.player]\r\n      }));\r\n      toast.success(`${data.player.name} joined!`);\r\n    });\r\n\r\n    socketInstance.on('gameStarted', (data) => {\r\n      setGameState('playing');\r\n      toast.success('🎮 Cards dealt! Game started!');\r\n    });\r\n\r\n    socketInstance.on('gameUpdate', (data) => {\r\n      setGameData(data);\r\n      setMyCards(data.myCards || []);\r\n      setIsMyTurn(data.isMyTurn || false);\r\n    });\r\n\r\n    socketInstance.on('gameError', (error) => {\r\n      toast.error(error.message);\r\n    });\r\n\r\n    socketInstance.on('unoAlert', (data) => {\r\n      toast.success(data.message);\r\n    });\r\n\r\n    socketInstance.on('gameWon', (data) => {\r\n      toast.success(data.message);\r\n      setTimeout(() => {\r\n        setGameState('lobby');\r\n        setRoom(null);\r\n        setPlayer(null);\r\n        setGameData(null);\r\n      }, 5000);\r\n    });\r\n\r\n    socketInstance.on('error', (error) => {\r\n      toast.error(error.message);\r\n    });\r\n\r\n    setSocket(socketInstance);\r\n\r\n    return () => socketInstance.close();\r\n  }, []);\r\n\r\n  const createRoom = useCallback(() => {\r\n    if (socket && playerName.trim()) {\r\n      socket.emit('createRoom', { playerName: playerName.trim() });\r\n    }\r\n  }, [socket, playerName]);\r\n\r\n  const joinRoom = useCallback(() => {\r\n    if (socket && playerName.trim() && roomId.trim()) {\r\n      socket.emit('joinRoom', { \r\n        roomId: roomId.trim().toUpperCase(), \r\n        playerName: playerName.trim() \r\n      });\r\n    }\r\n  }, [socket, playerName, roomId]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (mode === 'create') {\r\n      createRoom();\r\n    } else {\r\n      joinRoom();\r\n    }\r\n  };\r\n\r\n  const playCard = useCallback((cardId, chosenColor = null) => {\r\n    if (socket) {\r\n      socket.emit('playCard', { cardId, chosenColor });\r\n    }\r\n  }, [socket]);\r\n\r\n  const drawCard = useCallback(() => {\r\n    if (socket) {\r\n      socket.emit('drawCard');\r\n    }\r\n  }, [socket]);\r\n\r\n  const handleCardClick = (card) => {\r\n    if (!isMyTurn) {\r\n      toast.error('Not your turn!');\r\n      return;\r\n    }\r\n\r\n    if (card.color === 'wild') {\r\n      setPendingWildCard(card);\r\n      setShowColorPicker(true);\r\n    } else {\r\n      playCard(card.id);\r\n    }\r\n  };\r\n\r\n  const handleColorChoice = (color) => {\r\n    if (pendingWildCard) {\r\n      playCard(pendingWildCard.id, color);\r\n      setPendingWildCard(null);\r\n      setShowColorPicker(false);\r\n    }\r\n  };\r\n\r\n  const renderGameInterface = () => (\r\n    <GameInterface>\r\n      {/* Game Header */}\r\n      <GameHeader>\r\n        <div style={{ display: 'flex', gap: '20px' }}>\r\n          {gameData?.players?.map((playerData, index) => (\r\n            <PlayerCard\r\n              key={playerData.id}\r\n              isCurrentPlayer={index === gameData.currentPlayer}\r\n            >\r\n              <img src={playerData.avatar} alt={playerData.name} />\r\n              <div className=\"player-info\">\r\n                <div className=\"player-name\">{playerData.name}</div>\r\n                <div className=\"card-count\">{playerData.cardCount} cards</div>\r\n              </div>\r\n            </PlayerCard>\r\n          ))}\r\n        </div>\r\n      </GameHeader>\r\n\r\n      {/* Main Game Area */}\r\n      <GameBoard>\r\n        <CenterArea>\r\n          {/* Draw Pile */}\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Card\r\n              cardColor=\"deck\"\r\n              clickable={isMyTurn}\r\n              onClick={drawCard}\r\n              whileHover={{ scale: isMyTurn ? 1.05 : 1 }}\r\n            >\r\n              🃏\r\n            </Card>\r\n            <div style={{ marginTop: '10px', fontSize: '1.1em' }}>\r\n              Draw ({gameData?.deckSize || 0})\r\n            </div>\r\n          </div>\r\n\r\n          {/* Current Card */}\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Card\r\n              cardColor={gameData?.currentColor || gameData?.topCard?.color}\r\n              value={gameData?.topCard?.value}\r\n            >\r\n              {gameData?.topCard?.value?.toUpperCase() || '?'}\r\n            </Card>\r\n            <div style={{ marginTop: '10px', fontSize: '1.1em' }}>\r\n              Color: {gameData?.currentColor?.toUpperCase() || 'Unknown'}\r\n            </div>\r\n          </div>\r\n        </CenterArea>\r\n\r\n        <GameStatus isMyTurn={isMyTurn}>\r\n          <div className=\"turn-indicator\">\r\n            {isMyTurn ? '🎯 Your Turn!' : `Waiting for ${gameData?.currentPlayerName}...`}\r\n          </div>\r\n          \r\n          {gameData?.drawCount > 0 && (\r\n            <div className=\"penalty-warning\">\r\n              ⚡ Draw {gameData.drawCount} cards penalty!\r\n            </div>\r\n          )}\r\n        </GameStatus>\r\n      </GameBoard>\r\n\r\n      {/* Player Hand */}\r\n      <PlayerHand>\r\n        {myCards.map((card) => (\r\n          <Card\r\n            key={card.id}\r\n            cardColor={card.color}\r\n            value={card.value}\r\n            clickable={isMyTurn}\r\n            onClick={() => handleCardClick(card)}\r\n            whileHover={{ \r\n              y: isMyTurn ? -20 : -5, \r\n              scale: isMyTurn ? 1.15 : 1.05\r\n            }}\r\n            style={{ minWidth: '100px' }}\r\n          >\r\n            {card.value.toUpperCase()}\r\n          </Card>\r\n        ))}\r\n      </PlayerHand>\r\n\r\n      {/* Color Picker */}\r\n      <AnimatePresence>\r\n        {showColorPicker && (\r\n          <ColorPicker\r\n            initial={{ opacity: 0, scale: 0.8 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            exit={{ opacity: 0, scale: 0.8 }}\r\n          >\r\n            <h3>Choose a Color:</h3>\r\n            {['red', 'blue', 'green', 'yellow'].map((color) => (\r\n              <ColorOption\r\n                key={color}\r\n                style={{\r\n                  background: color === 'red' ? '#ff4757' :\r\n                             color === 'blue' ? '#3742fa' :\r\n                             color === 'green' ? '#2ed573' : '#ffa502'\r\n                }}\r\n                onClick={() => handleColorChoice(color)}\r\n                whileHover={{ scale: 1.15 }}\r\n                whileTap={{ scale: 0.9 }}\r\n              >\r\n                {color.toUpperCase()}\r\n              </ColorOption>\r\n            ))}\r\n          </ColorPicker>\r\n        )}\r\n      </AnimatePresence>\r\n    </GameInterface>\r\n  );\r\n\r\n  return (\r\n    <ThemeProvider theme={{}}>\r\n      <GlobalStyle />\r\n      <AppContainer>\r\n        <ThemeToggle>\r\n          <Sun size={24} />\r\n        </ThemeToggle>\r\n\r\n        <AnimatePresence mode=\"wait\">\r\n          {gameState === 'lobby' && (\r\n            <GameContainer key=\"lobby\">\r\n              <GameCard>\r\n                <Title>🃏 UNO</Title>\r\n                <Subtitle>Real-time Multiplayer Card Game</Subtitle>\r\n\r\n                <ConnectionStatus connected={connected}>\r\n                  <div className=\"status-dot\" />\r\n                  {connected ? 'Connected to server' : 'Connecting...'}\r\n                </ConnectionStatus>\r\n\r\n                <Form onSubmit={handleSubmit}>\r\n                  <Input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your name...\"\r\n                    value={playerName}\r\n                    onChange={(e) => setPlayerName(e.target.value)}\r\n                    required\r\n                  />\r\n\r\n                  {mode === 'join' && (\r\n                    <Input\r\n                      type=\"text\"\r\n                      placeholder=\"Room ID...\"\r\n                      value={roomId}\r\n                      onChange={(e) => setRoomId(e.target.value.toUpperCase())}\r\n                      required\r\n                    />\r\n                  )}\r\n                </Form>\r\n\r\n                <ButtonGroup>\r\n                  <Button\r\n                    className=\"primary\"\r\n                    onClick={() => {\r\n                      setMode('create');\r\n                      if (playerName.trim()) createRoom();\r\n                    }}\r\n                    disabled={!playerName.trim() || !connected}\r\n                  >\r\n                    <Plus size={20} />\r\n                    Create Room\r\n                  </Button>\r\n                  \r\n                  <Button\r\n                    className=\"secondary\"\r\n                    onClick={() => {\r\n                      if (mode === 'join') {\r\n                        if (playerName.trim() && roomId.trim()) joinRoom();\r\n                      } else {\r\n                        setMode('join');\r\n                      }\r\n                    }}\r\n                    disabled={mode === 'join' && (!playerName.trim() || !roomId.trim()) || !connected}\r\n                  >\r\n                    <LogIn size={20} />\r\n                    {mode === 'join' ? 'Join Room' : 'Join Existing'}\r\n                  </Button>\r\n                </ButtonGroup>\r\n              </GameCard>\r\n            </GameContainer>\r\n          )}\r\n\r\n          {gameState === 'waiting' && room && (\r\n            <GameContainer key=\"waiting\">\r\n              <GameCard>\r\n                <Title>🏠 Room: {room.id}</Title>\r\n                <Subtitle>Share this room ID with your friends!</Subtitle>\r\n\r\n                <RoomInfo>\r\n                  <PlayerList>\r\n                    {room.players?.map((roomPlayer) => (\r\n                      <PlayerChip\r\n                        key={roomPlayer.id}\r\n                        isMe={roomPlayer.id === player?.id}\r\n                      >\r\n                        <img src={roomPlayer.avatar} alt={roomPlayer.name} />\r\n                        {roomPlayer.name}\r\n                        {roomPlayer.id === player?.id && ' (You)'}\r\n                      </PlayerChip>\r\n                    ))}\r\n                  </PlayerList>\r\n\r\n                  <p style={{ \r\n                    marginTop: '30px', \r\n                    opacity: 0.8, \r\n                    fontSize: '1.1em',\r\n                    textAlign: 'center'\r\n                  }}>\r\n                    {room.players?.length < 2 ? (\r\n                      <>\r\n                        <Users size={20} style={{ marginRight: '10px' }} />\r\n                        Waiting for more players... ({room.players?.length}/4)\r\n                      </>\r\n                    ) : (\r\n                      '⚡ Game starting soon with real UNO cards!'\r\n                    )}\r\n                  </p>\r\n                </RoomInfo>\r\n              </GameCard>\r\n            </GameContainer>\r\n          )}\r\n\r\n          {gameState === 'playing' && gameData && renderGameInterface()}\r\n        </AnimatePresence>\r\n        \r\n        <Toaster position=\"top-center\" />\r\n      </AppContainer>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,MAAM,IAAIC,aAAa,EAAEC,iBAAiB,QAAQ,mBAAmB;AAC5E,SAASC,MAAM,EAAEC,eAAe,QAAQ,eAAe;AACvD,SAASC,OAAO,EAAEC,KAAK,QAAQ,iBAAiB;AAChD,SAASC,KAAK,EAAEC,IAAI,EAAEC,KAAK,EAAEC,IAAI,EAAEC,GAAG,EAAEC,MAAM,QAAQ,cAAc;AACpE,OAAOC,EAAE,MAAM,kBAAkB;;AAEjC;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,WAAW,GAAGhB,iBAAiB;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAiB,EAAA,GAdMD,WAAW;AAejB,MAAME,YAAY,GAAGpB,MAAM,CAACqB,GAAG;AAC/B;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAAC,GAAA,GAPMF,YAAY;AAQlB,MAAMG,aAAa,GAAGvB,MAAM,CAACG,MAAM,CAACkB,GAAG,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GANID,aAAa;AAQnB,MAAME,UAAU,GAAGzB,MAAM,CAACqB,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GARID,UAAU;AAUhB,MAAME,UAAU,GAAG3B,MAAM,CAACG,MAAM,CAACkB,GAAG,CAAC;AACrC;AACA;AACA;AACA;AACA,gBAAgBO,KAAK,IAAIA,KAAK,CAACC,eAAe,GAC1C,2CAA2C,GAC3C,2BAA2B;AAC/B;AACA;AACA,YACYD,KAAK,IAAIA,KAAK,CAACC,eAAe,GAAG,mBAAmB,GAAG,oCAAoC;AACvG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GA9BIH,UAAU;AAgChB,MAAMI,SAAS,GAAG/B,MAAM,CAACqB,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACW,GAAA,GARID,SAAS;AAUf,MAAME,UAAU,GAAGjC,MAAM,CAACqB,GAAG;AAC7B;AACA;AACA;AACA;AACA,CAAC;AAACa,GAAA,GALID,UAAU;AAOhB,MAAME,IAAI,GAAGnC,MAAM,CAACG,MAAM,CAACkB,GAAG,CAAC;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAYO,KAAK,IAAIA,KAAK,CAACQ,SAAS,GAAG,SAAS,GAAG,SAAS;AAC5D;AACA;AACA;AACA;AACA,gBAAgBR,KAAK,IAAI;EACrB,IAAIA,KAAK,CAACS,SAAS,KAAK,KAAK,EAAE,OAAO,2CAA2C;EACjF,IAAIT,KAAK,CAACS,SAAS,KAAK,MAAM,EAAE,OAAO,2CAA2C;EAClF,IAAIT,KAAK,CAACS,SAAS,KAAK,OAAO,EAAE,OAAO,2CAA2C;EACnF,IAAIT,KAAK,CAACS,SAAS,KAAK,QAAQ,EAAE,OAAO,2CAA2C;EACpF,IAAIT,KAAK,CAACS,SAAS,KAAK,MAAM,EAAE,OAAO,6DAA6D;EACpG,OAAO,2CAA2C;AACpD,CAAC;AACH;AACA;AACA;AACA;AACA;AACA,iBAAiBT,KAAK,IAAIA,KAAK,CAACQ,SAAS,GAAG,8BAA8B,GAAG,kBAAkB;AAC/F;AACA;AACA,CAAC;AAACE,GAAA,GA9BIH,IAAI;AAgCV,MAAMI,UAAU,GAAGvC,MAAM,CAACqB,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACmB,GAAA,GAdID,UAAU;AAgBhB,MAAME,UAAU,GAAGzC,MAAM,CAACqB,GAAG;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaO,KAAK,IAAIA,KAAK,CAACc,QAAQ,GAAG,SAAS,GAAG,OAAO;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GApBIF,UAAU;AAsBhB,MAAMG,YAAY,GAAG5C,MAAM,CAACG,MAAM,CAAC0C,MAAM,CAAC;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAED,MAAMC,WAAW,GAAG9C,MAAM,CAACG,MAAM,CAACkB,GAAG,CAAC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC0B,GAAA,GAjBID,WAAW;AAmBjB,MAAME,WAAW,GAAGhD,MAAM,CAACG,MAAM,CAACkB,GAAG,CAAC;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AAAA4B,IAAA,GApBMD,WAAW;AAqBjB,MAAME,aAAa,GAAGlD,MAAM,CAACG,MAAM,CAACkB,GAAG,CAAC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC8B,IAAA,GARID,aAAa;AAUnB,MAAME,QAAQ,GAAGpD,MAAM,CAACG,MAAM,CAACkB,GAAG,CAAC;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACgC,IAAA,GATID,QAAQ;AAWd,MAAME,KAAK,GAAGtD,MAAM,CAACuD,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GARIF,KAAK;AAUX,MAAMG,QAAQ,GAAGzD,MAAM,CAAC0D,CAAC;AACzB;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GALIF,QAAQ;AAOd,MAAMG,IAAI,GAAG5D,MAAM,CAAC6D,IAAI;AACxB;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GALIF,IAAI;AAOV,MAAMG,KAAK,GAAG/D,MAAM,CAACgE,KAAK;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,IAAA,GAjBIF,KAAK;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}