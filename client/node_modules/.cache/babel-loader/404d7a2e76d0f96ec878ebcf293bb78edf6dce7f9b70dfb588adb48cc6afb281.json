{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Adwait\\\\uno\\\\modern-uno-game\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [gameState, setGameState] = useState('lobby');\n  const [socket, setSocket] = useState(null);\n  const [connected, setConnected] = useState(false);\n  const [player, setPlayer] = useState(null);\n  const [room, setRoom] = useState(null);\n  const [playerName, setPlayerName] = useState('');\n  const [roomId, setRoomId] = useState('');\n  const [mode, setMode] = useState('create');\n\n  // Game state\n  const [gameData, setGameData] = useState(null);\n  const [myCards, setMyCards] = useState([]);\n  const [isMyTurn, setIsMyTurn] = useState(false);\n\n  // Socket connection\n  useEffect(() => {\n    console.log('🔗 Initializing socket connection...');\n    const socketInstance = io('http://localhost:3003', {\n      transports: ['websocket', 'polling']\n    });\n    socketInstance.on('connect', () => {\n      setConnected(true);\n      console.log('✅ Connected to server');\n    });\n    socketInstance.on('disconnect', () => {\n      setConnected(false);\n      console.log('❌ Disconnected from server');\n    });\n    socketInstance.on('roomCreated', data => {\n      console.log('🏠 Room created:', data);\n      setRoom(data.room);\n      setPlayer(data.room.players[0]);\n      setGameState('waiting');\n    });\n    socketInstance.on('roomJoined', data => {\n      console.log('🚪 Room joined:', data);\n      setRoom(data.room);\n      setPlayer(data.player);\n      setGameState('waiting');\n    });\n    socketInstance.on('playerJoined', data => {\n      console.log('👤 Player joined:', data);\n      setRoom(prevRoom => ({\n        ...prevRoom,\n        players: [...((prevRoom === null || prevRoom === void 0 ? void 0 : prevRoom.players) || []), data.player]\n      }));\n    });\n    socketInstance.on('gameStarted', data => {\n      console.log('🎮 Game started:', data);\n      setGameState('playing');\n    });\n    socketInstance.on('gameUpdate', data => {\n      console.log('📊 Game update received:', data);\n      setGameData(data);\n      setMyCards(data.myCards || []);\n      setIsMyTurn(data.isMyTurn || false);\n    });\n    socketInstance.on('gameError', error => {\n      console.error('❌ Game error:', error);\n      alert(error.message);\n    });\n    socketInstance.on('gameWon', data => {\n      console.log('🏆 Game won:', data);\n      alert(`🎉 ${data.winner} wins!`);\n      setTimeout(() => {\n        setGameState('lobby');\n        setRoom(null);\n        setPlayer(null);\n        setGameData(null);\n        setMyCards([]);\n      }, 3000);\n    });\n    socketInstance.on('error', error => {\n      console.error('❌ Socket error:', error);\n      alert(error.message);\n    });\n    setSocket(socketInstance);\n    return () => {\n      console.log('🔌 Closing socket connection');\n      socketInstance.close();\n    };\n  }, []);\n  const createRoom = () => {\n    if (socket && playerName.trim()) {\n      console.log('🎯 Creating room for:', playerName);\n      socket.emit('createRoom', {\n        playerName: playerName.trim()\n      });\n    }\n  };\n  const joinRoom = () => {\n    if (socket && playerName.trim() && roomId.trim()) {\n      console.log('🎯 Joining room:', roomId);\n      socket.emit('joinRoom', {\n        roomId: roomId.trim().toUpperCase(),\n        playerName: playerName.trim()\n      });\n    }\n  };\n  const playCard = cardId => {\n    if (socket && isMyTurn) {\n      console.log('🃏 Playing card:', cardId);\n      socket.emit('playCard', {\n        cardId\n      });\n    } else {\n      alert('Not your turn!');\n    }\n  };\n  const drawCard = () => {\n    if (socket && isMyTurn) {\n      console.log('🃏 Drawing card');\n      socket.emit('drawCard');\n    } else {\n      alert('Not your turn!');\n    }\n  };\n\n  // Debug info\n  console.log('=== DEBUG INFO ===');\n  console.log('Game State:', gameState);\n  console.log('Connected:', connected);\n  console.log('My Cards:', myCards);\n  console.log('Is My Turn:', isMyTurn);\n  console.log('Game Data:', gameData);\n  console.log('==================');\n  const styles = {\n    body: {\n      fontFamily: 'Arial, sans-serif',\n      margin: 0,\n      background: 'linear-gradient(135deg, #1a1a2e, #16213e, #0f3460)',\n      color: 'white',\n      minHeight: '100vh'\n    },\n    container: {\n      padding: '20px',\n      maxWidth: '1200px',\n      margin: '0 auto'\n    },\n    lobby: {\n      textAlign: 'center',\n      padding: '50px',\n      background: 'rgba(255,255,255,0.1)',\n      borderRadius: '20px',\n      marginTop: '50px'\n    },\n    input: {\n      padding: '15px',\n      fontSize: '1.1em',\n      border: 'none',\n      borderRadius: '10px',\n      margin: '10px',\n      width: '200px'\n    },\n    button: {\n      padding: '15px 25px',\n      fontSize: '1.1em',\n      border: 'none',\n      borderRadius: '10px',\n      margin: '10px',\n      cursor: 'pointer',\n      background: '#ff4757',\n      color: 'white'\n    },\n    gameBoard: {\n      textAlign: 'center',\n      padding: '20px'\n    },\n    players: {\n      display: 'flex',\n      gap: '20px',\n      marginBottom: '30px',\n      justifyContent: 'center',\n      flexWrap: 'wrap'\n    },\n    player: {\n      padding: '15px 25px',\n      background: 'rgba(255,255,255,0.2)',\n      borderRadius: '15px',\n      border: '3px solid transparent'\n    },\n    currentPlayer: {\n      background: '#ffd700',\n      color: '#000',\n      borderColor: '#ffaa00'\n    },\n    centerArea: {\n      display: 'flex',\n      gap: '40px',\n      justifyContent: 'center',\n      margin: '30px 0'\n    },\n    card: {\n      width: '120px',\n      height: '180px',\n      borderRadius: '15px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontSize: '1.5em',\n      fontWeight: 'bold',\n      color: 'white',\n      cursor: 'pointer',\n      border: '3px solid #fff',\n      boxShadow: '0 8px 25px rgba(0,0,0,0.3)'\n    },\n    playerHand: {\n      position: 'fixed',\n      bottom: '20px',\n      left: '50%',\n      transform: 'translateX(-50%)',\n      display: 'flex',\n      gap: '10px',\n      padding: '20px',\n      background: 'rgba(255,255,255,0.1)',\n      borderRadius: '20px',\n      maxWidth: '90vw',\n      overflowX: 'auto'\n    },\n    handCard: {\n      width: '80px',\n      height: '120px',\n      borderRadius: '10px',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      fontWeight: 'bold',\n      color: 'white',\n      cursor: 'pointer',\n      border: '2px solid #fff',\n      minWidth: '80px',\n      fontSize: '0.9em'\n    },\n    turnIndicator: {\n      fontSize: '1.5em',\n      fontWeight: 'bold',\n      margin: '20px 0',\n      padding: '20px',\n      background: 'rgba(255,255,255,0.1)',\n      borderRadius: '15px'\n    },\n    myTurn: {\n      background: '#2ed573'\n    },\n    connectionStatus: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      gap: '10px',\n      marginBottom: '20px'\n    },\n    statusDot: {\n      width: '12px',\n      height: '12px',\n      borderRadius: '50%',\n      background: connected ? '#2ed573' : '#ff4757'\n    }\n  };\n  const getCardColor = color => {\n    switch (color) {\n      case 'red':\n        return '#ff4757';\n      case 'blue':\n        return '#3742fa';\n      case 'green':\n        return '#2ed573';\n      case 'yellow':\n        return '#ffa502';\n      default:\n        return '#57606f';\n    }\n  };\n  if (gameState === 'lobby') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.body,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.container,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.lobby,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              fontSize: '4em',\n              marginBottom: '20px'\n            },\n            children: \"\\uD83C\\uDCCF UNO\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '1.2em',\n              marginBottom: '30px'\n            },\n            children: \"Real-time Multiplayer Card Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.connectionStatus,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: styles.statusDot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), connected ? 'Connected to server' : 'Connecting...']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              style: styles.input,\n              type: \"text\",\n              placeholder: \"Enter your name...\",\n              value: playerName,\n              onChange: e => setPlayerName(e.target.value),\n              maxLength: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), mode === 'join' && /*#__PURE__*/_jsxDEV(\"input\", {\n              style: styles.input,\n              type: \"text\",\n              placeholder: \"Room ID...\",\n              value: roomId,\n              onChange: e => setRoomId(e.target.value.toUpperCase()),\n              maxLength: 6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              style: styles.button,\n              onClick: () => {\n                setMode('create');\n                if (playerName.trim()) createRoom();\n              },\n              disabled: !playerName.trim() || !connected,\n              children: \"\\u2795 Create Room\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              style: styles.button,\n              onClick: () => {\n                if (mode === 'join') {\n                  if (playerName.trim() && roomId.trim()) joinRoom();\n                } else {\n                  setMode('join');\n                }\n              },\n              children: [\"\\uD83D\\uDEAA \", mode === 'join' ? 'Join Room' : 'Join Existing']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 322,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 7\n    }, this);\n  }\n  if (gameState === 'waiting') {\n    var _room$players, _room$players2, _room$players3, _room$players4;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.body,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.container,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.lobby,\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              fontSize: '3em'\n            },\n            children: [\"\\uD83C\\uDFE0 Room: \", room === null || room === void 0 ? void 0 : room.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '1.2em',\n              marginBottom: '30px'\n            },\n            children: \"Share this room ID with your friends!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginBottom: '30px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Players (\", (room === null || room === void 0 ? void 0 : (_room$players = room.players) === null || _room$players === void 0 ? void 0 : _room$players.length) || 0, \"/4):\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, this), room === null || room === void 0 ? void 0 : (_room$players2 = room.players) === null || _room$players2 === void 0 ? void 0 : _room$players2.map((roomPlayer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'inline-block',\n                margin: '10px',\n                padding: '10px 15px',\n                background: roomPlayer.id === (player === null || player === void 0 ? void 0 : player.id) ? '#ff4757' : 'rgba(255,255,255,0.2)',\n                borderRadius: '20px',\n                fontSize: '1.1em'\n              },\n              children: [roomPlayer.name, \" \", roomPlayer.id === (player === null || player === void 0 ? void 0 : player.id) && '(You)']\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: '1.1em',\n              opacity: 0.8\n            },\n            children: (room === null || room === void 0 ? void 0 : (_room$players3 = room.players) === null || _room$players3 === void 0 ? void 0 : _room$players3.length) < 2 ? `Waiting for more players... (${room === null || room === void 0 ? void 0 : (_room$players4 = room.players) === null || _room$players4 === void 0 ? void 0 : _room$players4.length}/4)` : '⚡ Game starting soon!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this);\n  }\n  if (gameState === 'playing') {\n    var _gameData$players, _gameData$topCard, _gameData$topCard2, _gameData$topCard2$va;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.body,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.gameBoard,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.players,\n            children: gameData === null || gameData === void 0 ? void 0 : (_gameData$players = gameData.players) === null || _gameData$players === void 0 ? void 0 : _gameData$players.map((playerData, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                ...styles.player,\n                ...(playerData.isCurrentPlayer ? styles.currentPlayer : {})\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: playerData.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 403,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [playerData.cardCount, \" cards\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.centerArea,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  ...styles.card,\n                  background: '#57606f'\n                },\n                onClick: drawCard,\n                children: \"\\uD83C\\uDCCF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [\"Draw (\", (gameData === null || gameData === void 0 ? void 0 : gameData.deckSize) || 0, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: 'center'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  ...styles.card,\n                  background: getCardColor(gameData === null || gameData === void 0 ? void 0 : (_gameData$topCard = gameData.topCard) === null || _gameData$topCard === void 0 ? void 0 : _gameData$topCard.color)\n                },\n                children: (gameData === null || gameData === void 0 ? void 0 : (_gameData$topCard2 = gameData.topCard) === null || _gameData$topCard2 === void 0 ? void 0 : (_gameData$topCard2$va = _gameData$topCard2.value) === null || _gameData$topCard2$va === void 0 ? void 0 : _gameData$topCard2$va.toUpperCase()) || '?'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Top Card\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              ...styles.turnIndicator,\n              ...(isMyTurn ? styles.myTurn : {})\n            },\n            children: isMyTurn ? '🎯 Your Turn!' : `Waiting for ${(gameData === null || gameData === void 0 ? void 0 : gameData.currentPlayerName) || 'player'}...`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.playerHand,\n          children: myCards.length > 0 ? myCards.map(card => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              ...styles.handCard,\n              background: getCardColor(card.color)\n            },\n            onClick: () => playCard(card.id),\n            children: card.value\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              padding: '20px',\n              opacity: 0.7\n            },\n            children: \"No cards yet...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.body,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center',\n          padding: '50px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83C\\uDFAE Loading UNO Game...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current state: \", gameState]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 474,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 471,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 470,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Yp8P8x3I8aH6ksoP2C+Odzp2RMA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","io","jsxDEV","_jsxDEV","App","_s","gameState","setGameState","socket","setSocket","connected","setConnected","player","setPlayer","room","setRoom","playerName","setPlayerName","roomId","setRoomId","mode","setMode","gameData","setGameData","myCards","setMyCards","isMyTurn","setIsMyTurn","console","log","socketInstance","transports","on","data","players","prevRoom","error","alert","message","winner","setTimeout","close","createRoom","trim","emit","joinRoom","toUpperCase","playCard","cardId","drawCard","styles","body","fontFamily","margin","background","color","minHeight","container","padding","maxWidth","lobby","textAlign","borderRadius","marginTop","input","fontSize","border","width","button","cursor","gameBoard","display","gap","marginBottom","justifyContent","flexWrap","currentPlayer","borderColor","centerArea","card","height","alignItems","fontWeight","boxShadow","playerHand","position","bottom","left","transform","overflowX","handCard","minWidth","turnIndicator","myTurn","connectionStatus","statusDot","getCardColor","style","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","maxLength","onClick","disabled","_room$players","_room$players2","_room$players3","_room$players4","id","length","map","roomPlayer","index","name","opacity","_gameData$players","_gameData$topCard","_gameData$topCard2","_gameData$topCard2$va","playerData","isCurrentPlayer","cardCount","deckSize","topCard","currentPlayerName","_c","$RefreshReg$"],"sources":["C:/Users/Adwait/uno/modern-uno-game/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nfunction App() {\r\n  const [gameState, setGameState] = useState('lobby');\r\n  const [socket, setSocket] = useState(null);\r\n  const [connected, setConnected] = useState(false);\r\n  const [player, setPlayer] = useState(null);\r\n  const [room, setRoom] = useState(null);\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [roomId, setRoomId] = useState('');\r\n  const [mode, setMode] = useState('create');\r\n  \r\n  // Game state\r\n  const [gameData, setGameData] = useState(null);\r\n  const [myCards, setMyCards] = useState([]);\r\n  const [isMyTurn, setIsMyTurn] = useState(false);\r\n\r\n  // Socket connection\r\n  useEffect(() => {\r\n    console.log('🔗 Initializing socket connection...');\r\n    \r\n    const socketInstance = io('http://localhost:3003', {\r\n      transports: ['websocket', 'polling']\r\n    });\r\n\r\n    socketInstance.on('connect', () => {\r\n      setConnected(true);\r\n      console.log('✅ Connected to server');\r\n    });\r\n\r\n    socketInstance.on('disconnect', () => {\r\n      setConnected(false);\r\n      console.log('❌ Disconnected from server');\r\n    });\r\n\r\n    socketInstance.on('roomCreated', (data) => {\r\n      console.log('🏠 Room created:', data);\r\n      setRoom(data.room);\r\n      setPlayer(data.room.players[0]);\r\n      setGameState('waiting');\r\n    });\r\n\r\n    socketInstance.on('roomJoined', (data) => {\r\n      console.log('🚪 Room joined:', data);\r\n      setRoom(data.room);\r\n      setPlayer(data.player);\r\n      setGameState('waiting');\r\n    });\r\n\r\n    socketInstance.on('playerJoined', (data) => {\r\n      console.log('👤 Player joined:', data);\r\n      setRoom(prevRoom => ({\r\n        ...prevRoom,\r\n        players: [...(prevRoom?.players || []), data.player]\r\n      }));\r\n    });\r\n\r\n    socketInstance.on('gameStarted', (data) => {\r\n      console.log('🎮 Game started:', data);\r\n      setGameState('playing');\r\n    });\r\n\r\n    socketInstance.on('gameUpdate', (data) => {\r\n      console.log('📊 Game update received:', data);\r\n      setGameData(data);\r\n      setMyCards(data.myCards || []);\r\n      setIsMyTurn(data.isMyTurn || false);\r\n    });\r\n\r\n    socketInstance.on('gameError', (error) => {\r\n      console.error('❌ Game error:', error);\r\n      alert(error.message);\r\n    });\r\n\r\n    socketInstance.on('gameWon', (data) => {\r\n      console.log('🏆 Game won:', data);\r\n      alert(`🎉 ${data.winner} wins!`);\r\n      setTimeout(() => {\r\n        setGameState('lobby');\r\n        setRoom(null);\r\n        setPlayer(null);\r\n        setGameData(null);\r\n        setMyCards([]);\r\n      }, 3000);\r\n    });\r\n\r\n    socketInstance.on('error', (error) => {\r\n      console.error('❌ Socket error:', error);\r\n      alert(error.message);\r\n    });\r\n\r\n    setSocket(socketInstance);\r\n\r\n    return () => {\r\n      console.log('🔌 Closing socket connection');\r\n      socketInstance.close();\r\n    };\r\n  }, []);\r\n\r\n  const createRoom = () => {\r\n    if (socket && playerName.trim()) {\r\n      console.log('🎯 Creating room for:', playerName);\r\n      socket.emit('createRoom', { playerName: playerName.trim() });\r\n    }\r\n  };\r\n\r\n  const joinRoom = () => {\r\n    if (socket && playerName.trim() && roomId.trim()) {\r\n      console.log('🎯 Joining room:', roomId);\r\n      socket.emit('joinRoom', { \r\n        roomId: roomId.trim().toUpperCase(), \r\n        playerName: playerName.trim() \r\n      });\r\n    }\r\n  };\r\n\r\n  const playCard = (cardId) => {\r\n    if (socket && isMyTurn) {\r\n      console.log('🃏 Playing card:', cardId);\r\n      socket.emit('playCard', { cardId });\r\n    } else {\r\n      alert('Not your turn!');\r\n    }\r\n  };\r\n\r\n  const drawCard = () => {\r\n    if (socket && isMyTurn) {\r\n      console.log('🃏 Drawing card');\r\n      socket.emit('drawCard');\r\n    } else {\r\n      alert('Not your turn!');\r\n    }\r\n  };\r\n\r\n  // Debug info\r\n  console.log('=== DEBUG INFO ===');\r\n  console.log('Game State:', gameState);\r\n  console.log('Connected:', connected);\r\n  console.log('My Cards:', myCards);\r\n  console.log('Is My Turn:', isMyTurn);\r\n  console.log('Game Data:', gameData);\r\n  console.log('==================');\r\n\r\n  const styles = {\r\n    body: {\r\n      fontFamily: 'Arial, sans-serif',\r\n      margin: 0,\r\n      background: 'linear-gradient(135deg, #1a1a2e, #16213e, #0f3460)',\r\n      color: 'white',\r\n      minHeight: '100vh'\r\n    },\r\n    container: {\r\n      padding: '20px',\r\n      maxWidth: '1200px',\r\n      margin: '0 auto'\r\n    },\r\n    lobby: {\r\n      textAlign: 'center',\r\n      padding: '50px',\r\n      background: 'rgba(255,255,255,0.1)',\r\n      borderRadius: '20px',\r\n      marginTop: '50px'\r\n    },\r\n    input: {\r\n      padding: '15px',\r\n      fontSize: '1.1em',\r\n      border: 'none',\r\n      borderRadius: '10px',\r\n      margin: '10px',\r\n      width: '200px'\r\n    },\r\n    button: {\r\n      padding: '15px 25px',\r\n      fontSize: '1.1em',\r\n      border: 'none',\r\n      borderRadius: '10px',\r\n      margin: '10px',\r\n      cursor: 'pointer',\r\n      background: '#ff4757',\r\n      color: 'white'\r\n    },\r\n    gameBoard: {\r\n      textAlign: 'center',\r\n      padding: '20px'\r\n    },\r\n    players: {\r\n      display: 'flex',\r\n      gap: '20px',\r\n      marginBottom: '30px',\r\n      justifyContent: 'center',\r\n      flexWrap: 'wrap'\r\n    },\r\n    player: {\r\n      padding: '15px 25px',\r\n      background: 'rgba(255,255,255,0.2)',\r\n      borderRadius: '15px',\r\n      border: '3px solid transparent'\r\n    },\r\n    currentPlayer: {\r\n      background: '#ffd700',\r\n      color: '#000',\r\n      borderColor: '#ffaa00'\r\n    },\r\n    centerArea: {\r\n      display: 'flex',\r\n      gap: '40px',\r\n      justifyContent: 'center',\r\n      margin: '30px 0'\r\n    },\r\n    card: {\r\n      width: '120px',\r\n      height: '180px',\r\n      borderRadius: '15px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      fontSize: '1.5em',\r\n      fontWeight: 'bold',\r\n      color: 'white',\r\n      cursor: 'pointer',\r\n      border: '3px solid #fff',\r\n      boxShadow: '0 8px 25px rgba(0,0,0,0.3)'\r\n    },\r\n    playerHand: {\r\n      position: 'fixed',\r\n      bottom: '20px',\r\n      left: '50%',\r\n      transform: 'translateX(-50%)',\r\n      display: 'flex',\r\n      gap: '10px',\r\n      padding: '20px',\r\n      background: 'rgba(255,255,255,0.1)',\r\n      borderRadius: '20px',\r\n      maxWidth: '90vw',\r\n      overflowX: 'auto'\r\n    },\r\n    handCard: {\r\n      width: '80px',\r\n      height: '120px',\r\n      borderRadius: '10px',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      fontWeight: 'bold',\r\n      color: 'white',\r\n      cursor: 'pointer',\r\n      border: '2px solid #fff',\r\n      minWidth: '80px',\r\n      fontSize: '0.9em'\r\n    },\r\n    turnIndicator: {\r\n      fontSize: '1.5em',\r\n      fontWeight: 'bold',\r\n      margin: '20px 0',\r\n      padding: '20px',\r\n      background: 'rgba(255,255,255,0.1)',\r\n      borderRadius: '15px'\r\n    },\r\n    myTurn: {\r\n      background: '#2ed573'\r\n    },\r\n    connectionStatus: {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      gap: '10px',\r\n      marginBottom: '20px'\r\n    },\r\n    statusDot: {\r\n      width: '12px',\r\n      height: '12px',\r\n      borderRadius: '50%',\r\n      background: connected ? '#2ed573' : '#ff4757'\r\n    }\r\n  };\r\n\r\n  const getCardColor = (color) => {\r\n    switch(color) {\r\n      case 'red': return '#ff4757';\r\n      case 'blue': return '#3742fa';\r\n      case 'green': return '#2ed573';\r\n      case 'yellow': return '#ffa502';\r\n      default: return '#57606f';\r\n    }\r\n  };\r\n\r\n  if (gameState === 'lobby') {\r\n    return (\r\n      <div style={styles.body}>\r\n        <div style={styles.container}>\r\n          <div style={styles.lobby}>\r\n            <h1 style={{ fontSize: '4em', marginBottom: '20px' }}>🃏 UNO</h1>\r\n            <p style={{ fontSize: '1.2em', marginBottom: '30px' }}>Real-time Multiplayer Card Game</p>\r\n            \r\n            <div style={styles.connectionStatus}>\r\n              <div style={styles.statusDot}></div>\r\n              {connected ? 'Connected to server' : 'Connecting...'}\r\n            </div>\r\n\r\n            <div>\r\n              <input \r\n                style={styles.input}\r\n                type=\"text\" \r\n                placeholder=\"Enter your name...\" \r\n                value={playerName}\r\n                onChange={(e) => setPlayerName(e.target.value)}\r\n                maxLength={20}\r\n              />\r\n              {mode === 'join' && (\r\n                <input \r\n                  style={styles.input}\r\n                  type=\"text\" \r\n                  placeholder=\"Room ID...\" \r\n                  value={roomId}\r\n                  onChange={(e) => setRoomId(e.target.value.toUpperCase())}\r\n                  maxLength={6}\r\n                />\r\n              )}\r\n            </div>\r\n            \r\n            <div>\r\n              <button \r\n                style={styles.button}\r\n                onClick={() => {\r\n                  setMode('create');\r\n                  if (playerName.trim()) createRoom();\r\n                }}\r\n                disabled={!playerName.trim() || !connected}\r\n              >\r\n                ➕ Create Room\r\n              </button>\r\n              <button \r\n                style={styles.button}\r\n                onClick={() => {\r\n                  if (mode === 'join') {\r\n                    if (playerName.trim() && roomId.trim()) joinRoom();\r\n                  } else {\r\n                    setMode('join');\r\n                  }\r\n                }}\r\n              >\r\n                🚪 {mode === 'join' ? 'Join Room' : 'Join Existing'}\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (gameState === 'waiting') {\r\n    return (\r\n      <div style={styles.body}>\r\n        <div style={styles.container}>\r\n          <div style={styles.lobby}>\r\n            <h1 style={{ fontSize: '3em' }}>🏠 Room: {room?.id}</h1>\r\n            <p style={{ fontSize: '1.2em', marginBottom: '30px' }}>Share this room ID with your friends!</p>\r\n            \r\n            <div style={{ marginBottom: '30px' }}>\r\n              <h3>Players ({room?.players?.length || 0}/4):</h3>\r\n              {room?.players?.map((roomPlayer, index) => (\r\n                <div key={index} style={{\r\n                  display: 'inline-block',\r\n                  margin: '10px',\r\n                  padding: '10px 15px',\r\n                  background: roomPlayer.id === player?.id ? '#ff4757' : 'rgba(255,255,255,0.2)',\r\n                  borderRadius: '20px',\r\n                  fontSize: '1.1em'\r\n                }}>\r\n                  {roomPlayer.name} {roomPlayer.id === player?.id && '(You)'}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            <p style={{ fontSize: '1.1em', opacity: 0.8 }}>\r\n              {room?.players?.length < 2 ? \r\n                `Waiting for more players... (${room?.players?.length}/4)` :\r\n                '⚡ Game starting soon!'\r\n              }\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (gameState === 'playing') {\r\n    return (\r\n      <div style={styles.body}>\r\n        <div style={styles.container}>\r\n          <div style={styles.gameBoard}>\r\n            {/* Players */}\r\n            <div style={styles.players}>\r\n              {gameData?.players?.map((playerData, index) => (\r\n                <div \r\n                  key={index} \r\n                  style={{\r\n                    ...styles.player,\r\n                    ...(playerData.isCurrentPlayer ? styles.currentPlayer : {})\r\n                  }}\r\n                >\r\n                  <div style={{ fontWeight: 'bold' }}>{playerData.name}</div>\r\n                  <div>{playerData.cardCount} cards</div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Game Center */}\r\n            <div style={styles.centerArea}>\r\n              <div style={{ textAlign: 'center' }}>\r\n                <div \r\n                  style={{...styles.card, background: '#57606f'}}\r\n                  onClick={drawCard}\r\n                >\r\n                  🃏\r\n                </div>\r\n                <div>Draw ({gameData?.deckSize || 0})</div>\r\n              </div>\r\n\r\n              <div style={{ textAlign: 'center' }}>\r\n                <div \r\n                  style={{\r\n                    ...styles.card, \r\n                    background: getCardColor(gameData?.topCard?.color)\r\n                  }}\r\n                >\r\n                  {gameData?.topCard?.value?.toUpperCase() || '?'}\r\n                </div>\r\n                <div>Top Card</div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Turn Indicator */}\r\n            <div style={{\r\n              ...styles.turnIndicator,\r\n              ...(isMyTurn ? styles.myTurn : {})\r\n            }}>\r\n              {isMyTurn ? '🎯 Your Turn!' : `Waiting for ${gameData?.currentPlayerName || 'player'}...`}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Player Hand */}\r\n          <div style={styles.playerHand}>\r\n            {myCards.length > 0 ? (\r\n              myCards.map((card) => (\r\n                <div\r\n                  key={card.id}\r\n                  style={{\r\n                    ...styles.handCard,\r\n                    background: getCardColor(card.color)\r\n                  }}\r\n                  onClick={() => playCard(card.id)}\r\n                >\r\n                  {card.value}\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <div style={{ padding: '20px', opacity: 0.7 }}>\r\n                No cards yet...\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div style={styles.body}>\r\n      <div style={styles.container}>\r\n        <div style={{ textAlign: 'center', padding: '50px' }}>\r\n          <h2>🎮 Loading UNO Game...</h2>\r\n          <p>Current state: {gameState}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,EAAE,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,OAAO,CAAC;EACnD,MAAM,CAACS,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,UAAU,EAAEC,aAAa,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACqB,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,QAAQ,CAAC;;EAE1C;EACA,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACyB,OAAO,EAAEC,UAAU,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC2B,QAAQ,EAAEC,WAAW,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;;EAE/C;EACAC,SAAS,CAAC,MAAM;IACd4B,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;IAEnD,MAAMC,cAAc,GAAG7B,EAAE,CAAC,uBAAuB,EAAE;MACjD8B,UAAU,EAAE,CAAC,WAAW,EAAE,SAAS;IACrC,CAAC,CAAC;IAEFD,cAAc,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;MACjCrB,YAAY,CAAC,IAAI,CAAC;MAClBiB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACtC,CAAC,CAAC;IAEFC,cAAc,CAACE,EAAE,CAAC,YAAY,EAAE,MAAM;MACpCrB,YAAY,CAAC,KAAK,CAAC;MACnBiB,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IAC3C,CAAC,CAAC;IAEFC,cAAc,CAACE,EAAE,CAAC,aAAa,EAAGC,IAAI,IAAK;MACzCL,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEI,IAAI,CAAC;MACrClB,OAAO,CAACkB,IAAI,CAACnB,IAAI,CAAC;MAClBD,SAAS,CAACoB,IAAI,CAACnB,IAAI,CAACoB,OAAO,CAAC,CAAC,CAAC,CAAC;MAC/B3B,YAAY,CAAC,SAAS,CAAC;IACzB,CAAC,CAAC;IAEFuB,cAAc,CAACE,EAAE,CAAC,YAAY,EAAGC,IAAI,IAAK;MACxCL,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEI,IAAI,CAAC;MACpClB,OAAO,CAACkB,IAAI,CAACnB,IAAI,CAAC;MAClBD,SAAS,CAACoB,IAAI,CAACrB,MAAM,CAAC;MACtBL,YAAY,CAAC,SAAS,CAAC;IACzB,CAAC,CAAC;IAEFuB,cAAc,CAACE,EAAE,CAAC,cAAc,EAAGC,IAAI,IAAK;MAC1CL,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEI,IAAI,CAAC;MACtClB,OAAO,CAACoB,QAAQ,KAAK;QACnB,GAAGA,QAAQ;QACXD,OAAO,EAAE,CAAC,IAAI,CAAAC,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAED,OAAO,KAAI,EAAE,CAAC,EAAED,IAAI,CAACrB,MAAM;MACrD,CAAC,CAAC,CAAC;IACL,CAAC,CAAC;IAEFkB,cAAc,CAACE,EAAE,CAAC,aAAa,EAAGC,IAAI,IAAK;MACzCL,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEI,IAAI,CAAC;MACrC1B,YAAY,CAAC,SAAS,CAAC;IACzB,CAAC,CAAC;IAEFuB,cAAc,CAACE,EAAE,CAAC,YAAY,EAAGC,IAAI,IAAK;MACxCL,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEI,IAAI,CAAC;MAC7CV,WAAW,CAACU,IAAI,CAAC;MACjBR,UAAU,CAACQ,IAAI,CAACT,OAAO,IAAI,EAAE,CAAC;MAC9BG,WAAW,CAACM,IAAI,CAACP,QAAQ,IAAI,KAAK,CAAC;IACrC,CAAC,CAAC;IAEFI,cAAc,CAACE,EAAE,CAAC,WAAW,EAAGI,KAAK,IAAK;MACxCR,OAAO,CAACQ,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrCC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;IACtB,CAAC,CAAC;IAEFR,cAAc,CAACE,EAAE,CAAC,SAAS,EAAGC,IAAI,IAAK;MACrCL,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEI,IAAI,CAAC;MACjCI,KAAK,CAAC,MAAMJ,IAAI,CAACM,MAAM,QAAQ,CAAC;MAChCC,UAAU,CAAC,MAAM;QACfjC,YAAY,CAAC,OAAO,CAAC;QACrBQ,OAAO,CAAC,IAAI,CAAC;QACbF,SAAS,CAAC,IAAI,CAAC;QACfU,WAAW,CAAC,IAAI,CAAC;QACjBE,UAAU,CAAC,EAAE,CAAC;MAChB,CAAC,EAAE,IAAI,CAAC;IACV,CAAC,CAAC;IAEFK,cAAc,CAACE,EAAE,CAAC,OAAO,EAAGI,KAAK,IAAK;MACpCR,OAAO,CAACQ,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvCC,KAAK,CAACD,KAAK,CAACE,OAAO,CAAC;IACtB,CAAC,CAAC;IAEF7B,SAAS,CAACqB,cAAc,CAAC;IAEzB,OAAO,MAAM;MACXF,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;MAC3CC,cAAc,CAACW,KAAK,CAAC,CAAC;IACxB,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIlC,MAAM,IAAIQ,UAAU,CAAC2B,IAAI,CAAC,CAAC,EAAE;MAC/Bf,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEb,UAAU,CAAC;MAChDR,MAAM,CAACoC,IAAI,CAAC,YAAY,EAAE;QAAE5B,UAAU,EAAEA,UAAU,CAAC2B,IAAI,CAAC;MAAE,CAAC,CAAC;IAC9D;EACF,CAAC;EAED,MAAME,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIrC,MAAM,IAAIQ,UAAU,CAAC2B,IAAI,CAAC,CAAC,IAAIzB,MAAM,CAACyB,IAAI,CAAC,CAAC,EAAE;MAChDf,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEX,MAAM,CAAC;MACvCV,MAAM,CAACoC,IAAI,CAAC,UAAU,EAAE;QACtB1B,MAAM,EAAEA,MAAM,CAACyB,IAAI,CAAC,CAAC,CAACG,WAAW,CAAC,CAAC;QACnC9B,UAAU,EAAEA,UAAU,CAAC2B,IAAI,CAAC;MAC9B,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMI,QAAQ,GAAIC,MAAM,IAAK;IAC3B,IAAIxC,MAAM,IAAIkB,QAAQ,EAAE;MACtBE,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEmB,MAAM,CAAC;MACvCxC,MAAM,CAACoC,IAAI,CAAC,UAAU,EAAE;QAAEI;MAAO,CAAC,CAAC;IACrC,CAAC,MAAM;MACLX,KAAK,CAAC,gBAAgB,CAAC;IACzB;EACF,CAAC;EAED,MAAMY,QAAQ,GAAGA,CAAA,KAAM;IACrB,IAAIzC,MAAM,IAAIkB,QAAQ,EAAE;MACtBE,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;MAC9BrB,MAAM,CAACoC,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC,MAAM;MACLP,KAAK,CAAC,gBAAgB,CAAC;IACzB;EACF,CAAC;;EAED;EACAT,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACjCD,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEvB,SAAS,CAAC;EACrCsB,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEnB,SAAS,CAAC;EACpCkB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEL,OAAO,CAAC;EACjCI,OAAO,CAACC,GAAG,CAAC,aAAa,EAAEH,QAAQ,CAAC;EACpCE,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEP,QAAQ,CAAC;EACnCM,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EAEjC,MAAMqB,MAAM,GAAG;IACbC,IAAI,EAAE;MACJC,UAAU,EAAE,mBAAmB;MAC/BC,MAAM,EAAE,CAAC;MACTC,UAAU,EAAE,oDAAoD;MAChEC,KAAK,EAAE,OAAO;MACdC,SAAS,EAAE;IACb,CAAC;IACDC,SAAS,EAAE;MACTC,OAAO,EAAE,MAAM;MACfC,QAAQ,EAAE,QAAQ;MAClBN,MAAM,EAAE;IACV,CAAC;IACDO,KAAK,EAAE;MACLC,SAAS,EAAE,QAAQ;MACnBH,OAAO,EAAE,MAAM;MACfJ,UAAU,EAAE,uBAAuB;MACnCQ,YAAY,EAAE,MAAM;MACpBC,SAAS,EAAE;IACb,CAAC;IACDC,KAAK,EAAE;MACLN,OAAO,EAAE,MAAM;MACfO,QAAQ,EAAE,OAAO;MACjBC,MAAM,EAAE,MAAM;MACdJ,YAAY,EAAE,MAAM;MACpBT,MAAM,EAAE,MAAM;MACdc,KAAK,EAAE;IACT,CAAC;IACDC,MAAM,EAAE;MACNV,OAAO,EAAE,WAAW;MACpBO,QAAQ,EAAE,OAAO;MACjBC,MAAM,EAAE,MAAM;MACdJ,YAAY,EAAE,MAAM;MACpBT,MAAM,EAAE,MAAM;MACdgB,MAAM,EAAE,SAAS;MACjBf,UAAU,EAAE,SAAS;MACrBC,KAAK,EAAE;IACT,CAAC;IACDe,SAAS,EAAE;MACTT,SAAS,EAAE,QAAQ;MACnBH,OAAO,EAAE;IACX,CAAC;IACDxB,OAAO,EAAE;MACPqC,OAAO,EAAE,MAAM;MACfC,GAAG,EAAE,MAAM;MACXC,YAAY,EAAE,MAAM;MACpBC,cAAc,EAAE,QAAQ;MACxBC,QAAQ,EAAE;IACZ,CAAC;IACD/D,MAAM,EAAE;MACN8C,OAAO,EAAE,WAAW;MACpBJ,UAAU,EAAE,uBAAuB;MACnCQ,YAAY,EAAE,MAAM;MACpBI,MAAM,EAAE;IACV,CAAC;IACDU,aAAa,EAAE;MACbtB,UAAU,EAAE,SAAS;MACrBC,KAAK,EAAE,MAAM;MACbsB,WAAW,EAAE;IACf,CAAC;IACDC,UAAU,EAAE;MACVP,OAAO,EAAE,MAAM;MACfC,GAAG,EAAE,MAAM;MACXE,cAAc,EAAE,QAAQ;MACxBrB,MAAM,EAAE;IACV,CAAC;IACD0B,IAAI,EAAE;MACJZ,KAAK,EAAE,OAAO;MACda,MAAM,EAAE,OAAO;MACflB,YAAY,EAAE,MAAM;MACpBS,OAAO,EAAE,MAAM;MACfU,UAAU,EAAE,QAAQ;MACpBP,cAAc,EAAE,QAAQ;MACxBT,QAAQ,EAAE,OAAO;MACjBiB,UAAU,EAAE,MAAM;MAClB3B,KAAK,EAAE,OAAO;MACdc,MAAM,EAAE,SAAS;MACjBH,MAAM,EAAE,gBAAgB;MACxBiB,SAAS,EAAE;IACb,CAAC;IACDC,UAAU,EAAE;MACVC,QAAQ,EAAE,OAAO;MACjBC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAE,KAAK;MACXC,SAAS,EAAE,kBAAkB;MAC7BjB,OAAO,EAAE,MAAM;MACfC,GAAG,EAAE,MAAM;MACXd,OAAO,EAAE,MAAM;MACfJ,UAAU,EAAE,uBAAuB;MACnCQ,YAAY,EAAE,MAAM;MACpBH,QAAQ,EAAE,MAAM;MAChB8B,SAAS,EAAE;IACb,CAAC;IACDC,QAAQ,EAAE;MACRvB,KAAK,EAAE,MAAM;MACba,MAAM,EAAE,OAAO;MACflB,YAAY,EAAE,MAAM;MACpBS,OAAO,EAAE,MAAM;MACfU,UAAU,EAAE,QAAQ;MACpBP,cAAc,EAAE,QAAQ;MACxBQ,UAAU,EAAE,MAAM;MAClB3B,KAAK,EAAE,OAAO;MACdc,MAAM,EAAE,SAAS;MACjBH,MAAM,EAAE,gBAAgB;MACxByB,QAAQ,EAAE,MAAM;MAChB1B,QAAQ,EAAE;IACZ,CAAC;IACD2B,aAAa,EAAE;MACb3B,QAAQ,EAAE,OAAO;MACjBiB,UAAU,EAAE,MAAM;MAClB7B,MAAM,EAAE,QAAQ;MAChBK,OAAO,EAAE,MAAM;MACfJ,UAAU,EAAE,uBAAuB;MACnCQ,YAAY,EAAE;IAChB,CAAC;IACD+B,MAAM,EAAE;MACNvC,UAAU,EAAE;IACd,CAAC;IACDwC,gBAAgB,EAAE;MAChBvB,OAAO,EAAE,MAAM;MACfU,UAAU,EAAE,QAAQ;MACpBP,cAAc,EAAE,QAAQ;MACxBF,GAAG,EAAE,MAAM;MACXC,YAAY,EAAE;IAChB,CAAC;IACDsB,SAAS,EAAE;MACT5B,KAAK,EAAE,MAAM;MACba,MAAM,EAAE,MAAM;MACdlB,YAAY,EAAE,KAAK;MACnBR,UAAU,EAAE5C,SAAS,GAAG,SAAS,GAAG;IACtC;EACF,CAAC;EAED,MAAMsF,YAAY,GAAIzC,KAAK,IAAK;IAC9B,QAAOA,KAAK;MACV,KAAK,KAAK;QAAE,OAAO,SAAS;MAC5B,KAAK,MAAM;QAAE,OAAO,SAAS;MAC7B,KAAK,OAAO;QAAE,OAAO,SAAS;MAC9B,KAAK,QAAQ;QAAE,OAAO,SAAS;MAC/B;QAAS,OAAO,SAAS;IAC3B;EACF,CAAC;EAED,IAAIjD,SAAS,KAAK,OAAO,EAAE;IACzB,oBACEH,OAAA;MAAK8F,KAAK,EAAE/C,MAAM,CAACC,IAAK;MAAA+C,QAAA,eACtB/F,OAAA;QAAK8F,KAAK,EAAE/C,MAAM,CAACO,SAAU;QAAAyC,QAAA,eAC3B/F,OAAA;UAAK8F,KAAK,EAAE/C,MAAM,CAACU,KAAM;UAAAsC,QAAA,gBACvB/F,OAAA;YAAI8F,KAAK,EAAE;cAAEhC,QAAQ,EAAE,KAAK;cAAEQ,YAAY,EAAE;YAAO,CAAE;YAAAyB,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjEnG,OAAA;YAAG8F,KAAK,EAAE;cAAEhC,QAAQ,EAAE,OAAO;cAAEQ,YAAY,EAAE;YAAO,CAAE;YAAAyB,QAAA,EAAC;UAA+B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAE1FnG,OAAA;YAAK8F,KAAK,EAAE/C,MAAM,CAAC4C,gBAAiB;YAAAI,QAAA,gBAClC/F,OAAA;cAAK8F,KAAK,EAAE/C,MAAM,CAAC6C;YAAU;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EACnC5F,SAAS,GAAG,qBAAqB,GAAG,eAAe;UAAA;YAAAyF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjD,CAAC,eAENnG,OAAA;YAAA+F,QAAA,gBACE/F,OAAA;cACE8F,KAAK,EAAE/C,MAAM,CAACc,KAAM;cACpBuC,IAAI,EAAC,MAAM;cACXC,WAAW,EAAC,oBAAoB;cAChCC,KAAK,EAAEzF,UAAW;cAClB0F,QAAQ,EAAGC,CAAC,IAAK1F,aAAa,CAAC0F,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;cAC/CI,SAAS,EAAE;YAAG;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf,CAAC,EACDlF,IAAI,KAAK,MAAM,iBACdjB,OAAA;cACE8F,KAAK,EAAE/C,MAAM,CAACc,KAAM;cACpBuC,IAAI,EAAC,MAAM;cACXC,WAAW,EAAC,YAAY;cACxBC,KAAK,EAAEvF,MAAO;cACdwF,QAAQ,EAAGC,CAAC,IAAKxF,SAAS,CAACwF,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC3D,WAAW,CAAC,CAAC,CAAE;cACzD+D,SAAS,EAAE;YAAE;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACd,CACF;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eAENnG,OAAA;YAAA+F,QAAA,gBACE/F,OAAA;cACE8F,KAAK,EAAE/C,MAAM,CAACkB,MAAO;cACrB0C,OAAO,EAAEA,CAAA,KAAM;gBACbzF,OAAO,CAAC,QAAQ,CAAC;gBACjB,IAAIL,UAAU,CAAC2B,IAAI,CAAC,CAAC,EAAED,UAAU,CAAC,CAAC;cACrC,CAAE;cACFqE,QAAQ,EAAE,CAAC/F,UAAU,CAAC2B,IAAI,CAAC,CAAC,IAAI,CAACjC,SAAU;cAAAwF,QAAA,EAC5C;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTnG,OAAA;cACE8F,KAAK,EAAE/C,MAAM,CAACkB,MAAO;cACrB0C,OAAO,EAAEA,CAAA,KAAM;gBACb,IAAI1F,IAAI,KAAK,MAAM,EAAE;kBACnB,IAAIJ,UAAU,CAAC2B,IAAI,CAAC,CAAC,IAAIzB,MAAM,CAACyB,IAAI,CAAC,CAAC,EAAEE,QAAQ,CAAC,CAAC;gBACpD,CAAC,MAAM;kBACLxB,OAAO,CAAC,MAAM,CAAC;gBACjB;cACF,CAAE;cAAA6E,QAAA,GACH,eACI,EAAC9E,IAAI,KAAK,MAAM,GAAG,WAAW,GAAG,eAAe;YAAA;cAAA+E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAIhG,SAAS,KAAK,SAAS,EAAE;IAAA,IAAA0G,aAAA,EAAAC,cAAA,EAAAC,cAAA,EAAAC,cAAA;IAC3B,oBACEhH,OAAA;MAAK8F,KAAK,EAAE/C,MAAM,CAACC,IAAK;MAAA+C,QAAA,eACtB/F,OAAA;QAAK8F,KAAK,EAAE/C,MAAM,CAACO,SAAU;QAAAyC,QAAA,eAC3B/F,OAAA;UAAK8F,KAAK,EAAE/C,MAAM,CAACU,KAAM;UAAAsC,QAAA,gBACvB/F,OAAA;YAAI8F,KAAK,EAAE;cAAEhC,QAAQ,EAAE;YAAM,CAAE;YAAAiC,QAAA,GAAC,qBAAS,EAACpF,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEsG,EAAE;UAAA;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACxDnG,OAAA;YAAG8F,KAAK,EAAE;cAAEhC,QAAQ,EAAE,OAAO;cAAEQ,YAAY,EAAE;YAAO,CAAE;YAAAyB,QAAA,EAAC;UAAqC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAEhGnG,OAAA;YAAK8F,KAAK,EAAE;cAAExB,YAAY,EAAE;YAAO,CAAE;YAAAyB,QAAA,gBACnC/F,OAAA;cAAA+F,QAAA,GAAI,WAAS,EAAC,CAAApF,IAAI,aAAJA,IAAI,wBAAAkG,aAAA,GAAJlG,IAAI,CAAEoB,OAAO,cAAA8E,aAAA,uBAAbA,aAAA,CAAeK,MAAM,KAAI,CAAC,EAAC,MAAI;YAAA;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,EACjDxF,IAAI,aAAJA,IAAI,wBAAAmG,cAAA,GAAJnG,IAAI,CAAEoB,OAAO,cAAA+E,cAAA,uBAAbA,cAAA,CAAeK,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACpCrH,OAAA;cAAiB8F,KAAK,EAAE;gBACtB1B,OAAO,EAAE,cAAc;gBACvBlB,MAAM,EAAE,MAAM;gBACdK,OAAO,EAAE,WAAW;gBACpBJ,UAAU,EAAEiE,UAAU,CAACH,EAAE,MAAKxG,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEwG,EAAE,IAAG,SAAS,GAAG,uBAAuB;gBAC9EtD,YAAY,EAAE,MAAM;gBACpBG,QAAQ,EAAE;cACZ,CAAE;cAAAiC,QAAA,GACCqB,UAAU,CAACE,IAAI,EAAC,GAAC,EAACF,UAAU,CAACH,EAAE,MAAKxG,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEwG,EAAE,KAAI,OAAO;YAAA,GARlDI,KAAK;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OASV,CACN,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENnG,OAAA;YAAG8F,KAAK,EAAE;cAAEhC,QAAQ,EAAE,OAAO;cAAEyD,OAAO,EAAE;YAAI,CAAE;YAAAxB,QAAA,EAC3C,CAAApF,IAAI,aAAJA,IAAI,wBAAAoG,cAAA,GAAJpG,IAAI,CAAEoB,OAAO,cAAAgF,cAAA,uBAAbA,cAAA,CAAeG,MAAM,IAAG,CAAC,GACxB,gCAAgCvG,IAAI,aAAJA,IAAI,wBAAAqG,cAAA,GAAJrG,IAAI,CAAEoB,OAAO,cAAAiF,cAAA,uBAAbA,cAAA,CAAeE,MAAM,KAAK,GAC1D;UAAuB;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAExB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,IAAIhG,SAAS,KAAK,SAAS,EAAE;IAAA,IAAAqH,iBAAA,EAAAC,iBAAA,EAAAC,kBAAA,EAAAC,qBAAA;IAC3B,oBACE3H,OAAA;MAAK8F,KAAK,EAAE/C,MAAM,CAACC,IAAK;MAAA+C,QAAA,eACtB/F,OAAA;QAAK8F,KAAK,EAAE/C,MAAM,CAACO,SAAU;QAAAyC,QAAA,gBAC3B/F,OAAA;UAAK8F,KAAK,EAAE/C,MAAM,CAACoB,SAAU;UAAA4B,QAAA,gBAE3B/F,OAAA;YAAK8F,KAAK,EAAE/C,MAAM,CAAChB,OAAQ;YAAAgE,QAAA,EACxB5E,QAAQ,aAARA,QAAQ,wBAAAqG,iBAAA,GAARrG,QAAQ,CAAEY,OAAO,cAAAyF,iBAAA,uBAAjBA,iBAAA,CAAmBL,GAAG,CAAC,CAACS,UAAU,EAAEP,KAAK,kBACxCrH,OAAA;cAEE8F,KAAK,EAAE;gBACL,GAAG/C,MAAM,CAACtC,MAAM;gBAChB,IAAImH,UAAU,CAACC,eAAe,GAAG9E,MAAM,CAAC0B,aAAa,GAAG,CAAC,CAAC;cAC5D,CAAE;cAAAsB,QAAA,gBAEF/F,OAAA;gBAAK8F,KAAK,EAAE;kBAAEf,UAAU,EAAE;gBAAO,CAAE;gBAAAgB,QAAA,EAAE6B,UAAU,CAACN;cAAI;gBAAAtB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,eAC3DnG,OAAA;gBAAA+F,QAAA,GAAM6B,UAAU,CAACE,SAAS,EAAC,QAAM;cAAA;gBAAA9B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA,GAPlCkB,KAAK;cAAArB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQP,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAGNnG,OAAA;YAAK8F,KAAK,EAAE/C,MAAM,CAAC4B,UAAW;YAAAoB,QAAA,gBAC5B/F,OAAA;cAAK8F,KAAK,EAAE;gBAAEpC,SAAS,EAAE;cAAS,CAAE;cAAAqC,QAAA,gBAClC/F,OAAA;gBACE8F,KAAK,EAAE;kBAAC,GAAG/C,MAAM,CAAC6B,IAAI;kBAAEzB,UAAU,EAAE;gBAAS,CAAE;gBAC/CwD,OAAO,EAAE7D,QAAS;gBAAAiD,QAAA,EACnB;cAED;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACNnG,OAAA;gBAAA+F,QAAA,GAAK,QAAM,EAAC,CAAA5E,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE4G,QAAQ,KAAI,CAAC,EAAC,GAAC;cAAA;gBAAA/B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC,CAAC,eAENnG,OAAA;cAAK8F,KAAK,EAAE;gBAAEpC,SAAS,EAAE;cAAS,CAAE;cAAAqC,QAAA,gBAClC/F,OAAA;gBACE8F,KAAK,EAAE;kBACL,GAAG/C,MAAM,CAAC6B,IAAI;kBACdzB,UAAU,EAAE0C,YAAY,CAAC1E,QAAQ,aAARA,QAAQ,wBAAAsG,iBAAA,GAARtG,QAAQ,CAAE6G,OAAO,cAAAP,iBAAA,uBAAjBA,iBAAA,CAAmBrE,KAAK;gBACnD,CAAE;gBAAA2C,QAAA,EAED,CAAA5E,QAAQ,aAARA,QAAQ,wBAAAuG,kBAAA,GAARvG,QAAQ,CAAE6G,OAAO,cAAAN,kBAAA,wBAAAC,qBAAA,GAAjBD,kBAAA,CAAmBpB,KAAK,cAAAqB,qBAAA,uBAAxBA,qBAAA,CAA0BhF,WAAW,CAAC,CAAC,KAAI;cAAG;gBAAAqD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC5C,CAAC,eACNnG,OAAA;gBAAA+F,QAAA,EAAK;cAAQ;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGNnG,OAAA;YAAK8F,KAAK,EAAE;cACV,GAAG/C,MAAM,CAAC0C,aAAa;cACvB,IAAIlE,QAAQ,GAAGwB,MAAM,CAAC2C,MAAM,GAAG,CAAC,CAAC;YACnC,CAAE;YAAAK,QAAA,EACCxE,QAAQ,GAAG,eAAe,GAAG,eAAe,CAAAJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAE8G,iBAAiB,KAAI,QAAQ;UAAK;YAAAjC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAGNnG,OAAA;UAAK8F,KAAK,EAAE/C,MAAM,CAACkC,UAAW;UAAAc,QAAA,EAC3B1E,OAAO,CAAC6F,MAAM,GAAG,CAAC,GACjB7F,OAAO,CAAC8F,GAAG,CAAEvC,IAAI,iBACf5E,OAAA;YAEE8F,KAAK,EAAE;cACL,GAAG/C,MAAM,CAACwC,QAAQ;cAClBpC,UAAU,EAAE0C,YAAY,CAACjB,IAAI,CAACxB,KAAK;YACrC,CAAE;YACFuD,OAAO,EAAEA,CAAA,KAAM/D,QAAQ,CAACgC,IAAI,CAACqC,EAAE,CAAE;YAAAlB,QAAA,EAEhCnB,IAAI,CAAC0B;UAAK,GAPN1B,IAAI,CAACqC,EAAE;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAQT,CACN,CAAC,gBAEFnG,OAAA;YAAK8F,KAAK,EAAE;cAAEvC,OAAO,EAAE,MAAM;cAAEgE,OAAO,EAAE;YAAI,CAAE;YAAAxB,QAAA,EAAC;UAE/C;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV;EAEA,oBACEnG,OAAA;IAAK8F,KAAK,EAAE/C,MAAM,CAACC,IAAK;IAAA+C,QAAA,eACtB/F,OAAA;MAAK8F,KAAK,EAAE/C,MAAM,CAACO,SAAU;MAAAyC,QAAA,eAC3B/F,OAAA;QAAK8F,KAAK,EAAE;UAAEpC,SAAS,EAAE,QAAQ;UAAEH,OAAO,EAAE;QAAO,CAAE;QAAAwC,QAAA,gBACnD/F,OAAA;UAAA+F,QAAA,EAAI;QAAsB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/BnG,OAAA;UAAA+F,QAAA,GAAG,iBAAe,EAAC5F,SAAS;QAAA;UAAA6F,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjG,EAAA,CA3dQD,GAAG;AAAAiI,EAAA,GAAHjI,GAAG;AA6dZ,eAAeA,GAAG;AAAC,IAAAiI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}